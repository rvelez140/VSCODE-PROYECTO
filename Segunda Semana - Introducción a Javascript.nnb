{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# Bootcamp Full Stack Development - Semana 1"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<center><img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/b0a7adf3e6f6e4d79217bad2373cc29726336552/image-6.png\" height=\"290px\"/></center>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### Descripción de la Clase:\r\nLa primera semana es una introdución a los estudiantes al mundo del desarrollo web. Se enfoca en proporcionar una base sólida en HTML, CSS y JavaScript, así como en la configuración de herramientas esenciales para el desarrollo. Durante esta semana, los estudiantes construirán su primer proyecto básico, combinando estructura, estilo e interactividad.\r\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Clase 1: Introducción al Desarrollo Web"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### Objetivo:\r\nIntroducir a los estudiantes a los fundamentos del desarrollo web, incluyendo HTML, CSS y JavaScript.\r\n\r\n---"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### 1. Introducción al Bootcamp:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### Recursos e Instalables:\r\n- [Visual Studio Code](https://code.visualstudio.com/download): Un editor de código potente y ampliamente utilizado para el desarrollo web y más.\r\n    - [Node.js Notebook para VSCode](https://marketplace.visualstudio.com/items?itemName=donjayamanne.typescript-notebook): Extensión de VSCode para ejecutar y visualizar código Node.js directamente en un entorno interactivo.\r\n- [Node.js](https://nodejs.org/): Entorno de ejecución para JavaScript que permite desarrollar aplicaciones del lado del servidor.\r\n- [Docker](https://docs.docker.com/get-started/get-docker/): Plataforma para crear, gestionar y ejecutar aplicaciones en contenedores.\r\n- [Codepen](https://codepen.io/): Herramienta online para probar y compartir fragmentos de código HTML, CSS y JavaScript.\r\n- [GitHub](https://github.com/): Plataforma para alojar, gestionar y colaborar en proyectos de código.\r\n- [Git](https://git-scm.com/downloads): Sistema de control de versiones distribuido que facilita el seguimiento de cambios en el código fuente.\r\n\r\n---"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/78b9de362d1daf8f5468739a20c4e133ee95d3b9/node-js%2520notebook.png\"/>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### 2. Introducción a HTML:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Definición:** Lenguaje de marcado para estructurar contenido en la web."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**¿Qué es un HTML tag?**\r\nEs una construcción básica del lenguaje de marcado HTML que se utiliza para estructurar contenido en una página web. Los tags definen elementos específicos, como títulos, párrafos, enlaces, imágenes y más. Cada elemento tiene una función específica y puede incluir atributos para personalizar su comportamiento o apariencia."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<p id=\"parrafo1\" class=\"texto\">Este es un párrafo.</p>\r\n<hr />\r\n<p id=\"parrafo2\" class=\"texto\">Este es <b>otro<br /> párrafo</b>.</p>\r\n<p id=\"parrafo3\" class=\"texto\">Este es <u>otro</u> párrafo.</p>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<p id=\"parrafo1\" class=\"texto\">Este es un párrafo.</p>\r",
                                "<hr/>\r",
                                "<p id=\"parrafo2\" class=\"texto\">Este es <b>otro<br/> párrafo</b>.</p>\r",
                                "<p id=\"parrafo3\" class=\"texto\">Este es <u>otro</u> párrafo.</p>\r",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "### Partes de un HTML tag"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "1. **Etiqueta de apertura (Opening Tag):** Define el inicio del elemento HTML. Está delimitada por `< >` e incluye el nombre del elemento, como `<p>` para un párrafo.\r\n\r\n2. **Contenido:** Es el texto o elementos anidados que se encuentran entre la etiqueta de apertura y la etiqueta de cierre. Por ejemplo: `Este es un párrafo.`\r\n\r\n3. **Etiqueta de cierre (Closing Tag):** Indica el final del elemento. Es igual a la etiqueta de apertura, pero con una barra inclinada `/` antes del nombre del elemento, como `</p>`.\r\n\r\n4. **Atributos (Opcional):** Proporcionan información adicional sobre el elemento y siempre están definidos en la etiqueta de apertura. Por ejemplo, `class`, `id` o `style`."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "![alt text](https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/b0a7adf3e6f6e4d79217bad2373cc29726336552/image-9.png)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Ejemplo de un HTML tag"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "```html\r\n<p id=\"parrafo1\" class=\"texto\">Este es un párrafo de ejemplo.</p>\r\n```\r\n- **Etiqueta de apertura:** `<p>` abre el elemento de párrafo.\r\n- **Atributos:**\r\n  - `id=\"parrafo1\"` define un identificador único para el párrafo.\r\n  - `class=\"texto\"` asigna una clase al párrafo para aplicar estilos con CSS.\r\n- **Contenido:** `Este es un párrafo de ejemplo.` es el texto visible del párrafo.\r\n- **Etiqueta de cierre:** `</p>` cierra el elemento de párrafo."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Ejemplo Completo:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "```html\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <title>Mi primera página</title>\r\n  </head>\r\n  <body>\r\n    <h1>Hola Mundo</h1>\r\n    <p>Bienvenidos al desarrollo web.</p>\r\n    <a href=\"https://example.com\">Visita este enlace</a>\r\n    <img src=\"https://via.placeholder.com/150\" alt=\"Ejemplo de imagen\">\r\n    <ul>\r\n      <li>Elemento 1</li>\r\n      <li>Elemento 2</li>\r\n    </ul>\r\n  </body>\r\n</html>\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n  <title>Mi primera página</title>\r\n</head>\r\n\r\n<body>\r\n  <!-- headline -->\r\n  <h1>Hola Mundo</h1>\r\n  <p>Bienvenidos al desarrollo web.</p>\r\n  <a href=\"https://example.com\">Visita este enlace</a><br /><br />\r\n  <img src=\"https://dummyimage.com/600x400/000/fff\" alt=\"Ejemplo de imagen\">\r\n  <ul>\r\n    <li>Elemento 1</li>\r\n    <li>Elemento 2</li>\r\n  </ul>\r\n</body>\r\n\r\n</html>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<!DOCTYPE html>\r",
                                "<html>\r",
                                "  <head>\r",
                                "    <title>Mi primera página</title>\r",
                                "  </head>\r",
                                "  <body>\r",
                                "    <!-- headline -->\r",
                                "    <h1>Hola Mundo</h1>\r",
                                "    <p>Bienvenidos al desarrollo web.</p>\r",
                                "    <a href=\"https://example.com\">Visita este enlace</a><br/><br/>\r",
                                "    <img src=\"https://dummyimage.com/600x400/000/fff\" alt=\"Ejemplo de imagen\">\r",
                                "    <ul>\r",
                                "      <li>Elemento 1</li>\r",
                                "      <li>Elemento 2</li>\r",
                                "    </ul>\r",
                                "  </body>\r",
                                "</html>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "![alt text](https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/b0a7adf3e6f6e4d79217bad2373cc29726336552/image-4.png)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### Elementos HTML comúnes"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`<html>`:** Define el documento como HTML.\r\n  ```html\r\n  <html>\r\n    <!-- Todo el contenido de la página va dentro de esta etiqueta -->\r\n  </html>\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`<head>`:** Contiene metadatos del documento (título, enlaces a CSS, etc.).\r\n  ```html\r\n  <head>\r\n    <title>Mi Página</title>\r\n  </head>\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`<body>`:** Contiene el contenido visible de la página.\r\n  ```html\r\n  <body>\r\n    <h1>Hola Mundo</h1>\r\n    <p>Esto es un párrafo.</p>\r\n  </body>\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`<h1>` a `<h6>`:** Define encabezados, desde el más importante (`<h1>`) al menos importante (`<h6>`).\r\n  ```html\r\n  <h1>Título Principal</h1>\r\n  <h2>Subtítulo</h2>\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<h1>Título Principal</h1>\r\n<h2>Subtítulo 2</h2>\r\n<h3>Subtítulo 3</h3>\r\n<h4>Subtítulo 4</h4>\r\n<h5>Subtítulo 5</h5>\r\n<h6>Subtítulo 6</h6>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<h1>Título Principal</h1>\r",
                                "<h2>Subtítulo 2</h2>\r",
                                "<h3>Subtítulo 3</h3>\r",
                                "<h4>Subtítulo 4</h4>\r",
                                "<h5>Subtítulo 5</h5>\r",
                                "<h6>Subtítulo 6</h6>"
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stderr",
                            "value": [
                                "Debugger attached.\r",
                                "Debugger ending on ws://127.0.0.1:63483/7d9524b2-be9b-4185-ab2b-59eaf6bf7f7c\r",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **`<p>`:** Define un párrafo.\r\n  ```html\r\n  <p>Este es un texto de ejemplo en un párrafo.</p>\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`<a>`:** Define un enlace.\r\n  ```html\r\n  <a href=\"https://example.com\">Ir a Example</a>\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`<img>`:** Inserta una imagen.\r\n  ```html\r\n  <img src=\"imagen.jpg\" alt=\"Descripción de la imagen\">\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`<ul>` y `<ol>`:** Listas no ordenadas (`<ul>`) y ordenadas (`<ol>`).\r\n  ```html\r\n  <ul>\r\n    <li>Elemento 1</li>\r\n    <li>Elemento 2</li>\r\n  </ul>\r\n  <ol>\r\n    <li>Primero</li>\r\n    <li>Segundo</li>\r\n  </ol>\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`<li>`:** Define un elemento de lista dentro de `<ul>` o `<ol>`.\r\n  ```html\r\n  <li>Elemento de lista</li>\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`<input>`:** Define un campo de entrada para datos del usuario.\r\n  ```html\r\n  <input type=\"text\" placeholder=\"Escribe aquí\">\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`<div>`:** Define un contenedor genérico para agrupar elementos.\r\n  ```html\r\n  <div>\r\n      <p>Este es un párrafo dentro de un div.</p>\r\n      <input type=\"text\" placeholder=\"Escribe aquí\">\r\n      <p>Este es un <span style=\"color: red;\">texto destacado</span>.</p>\r\n  </div>\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`<span>`:** Define un contenedor en línea para aplicar estilos o agrupar texto.\r\n  ```html\r\n  <p>Este es un <span style=\"color: red;\">texto destacado</span>.</p>\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Ejercicio Práctico:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Crear una página básica que incluya:\r\n- Un titulo.\r\n- Un encabezado.\r\n- Un párrafo.\r\n- Visitar un enlace.\r\n- Una imagen de internet.\r\n- Una lista ordenada y una no ordenada con dos elementos"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "![alt text](https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/b0a7adf3e6f6e4d79217bad2373cc29726336552/image-5.png)"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<html>\r\n<!-- Ejemplo práctico aquí -->\r\n\r\n<head>\r\n    <title>Mi primera pagina</title>\r\n</head>\r\n\r\n<body>\r\n    <h1></h1>\r\n    <h1>Hola Mundo</h1>\r\n    <p>Bienvenidos al desarrollo web</p>\r\n    <hr />\r\n    <br />\r\n    <img />\r\n    <a href=\"https://google.com.do\">\r\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTaDdGaQwDp1QofPK7o8OG55G6txAH0525v6Q&s\" />\r\n    </a>\r\n    <br />\r\n\r\n    <ul>\r\n        <li>Element 1</li>\r\n        <li>Element 1</li>\r\n    </ul>\r\n    <ol>\r\n        <li>Paso 1</li>\r\n        <li>Paso 2</li>\r\n    </ol>\r\n</body>\r\n\r\n<html>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<html>\r",
                                "<!-- Ejemplo práctico aquí -->\r",
                                "\r",
                                "<head>\r",
                                "    <title>Mi primera pagina</title>\r",
                                "</head>\r",
                                "\r",
                                "<body>\r",
                                "    <h1>Hola Mundo</h1>\r",
                                "    <p>Bienvenidos al desarrollo web</p>\r",
                                "    <hr />\r",
                                "    <br />\r",
                                "    <img />\r",
                                "    <a href=\"https://google.com.do\">\r",
                                "        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTaDdGaQwDp1QofPK7o8OG55G6txAH0525v6Q&s\" />\r",
                                "    </a>\r",
                                "    <br />\r",
                                "\r",
                                "    <ul>\r",
                                "        <li>Element 1</li>\r",
                                "        <li>Element 1</li>\r",
                                "    </ul>\r",
                                "    <ol>\r",
                                "        <li>Paso 1</li>\r",
                                "        <li>Paso 2</li>\r",
                                "    </ol>\r",
                                "</body>\r",
                                "<html>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**HTML5 y Web Semántica:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**HTML5:** es la última versión del Lenguaje de Marcado de Hipertexto, que mejora y extiende las capacidades de HTML para ofrecer mejor soporte multimedia, nuevas APIs, y una semántica más clara para estructurar contenido web.\r\n\r\n**Web Semántica:** La Web Semántica es una extensión de la web actual, donde los datos están definidos y enlazados para que las máquinas puedan entenderlos e interpretarlos, facilitando la interoperabilidad entre aplicaciones y servicios."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/b0a7adf3e6f6e4d79217bad2373cc29726336552/image-8.png\" height=\"490px\"/>\r\n&nbsp;\r\n<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/fd4e9c7d9130eeffbcfc2916004de5d72a9ab06a/original.png\" height=\"490px\">"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Tags de HTML5 Semántico:**\r\n- **`<header>`:** Representa la cabecera de un documento o sección.\r\n  ```html\r\n  <header>\r\n    <h1>Bienvenidos a mi página</h1>\r\n    <nav>\r\n      <a href=\"#inicio\">Inicio</a>\r\n      <a href=\"#contacto\">Contacto</a>\r\n    </nav>\r\n  </header>\r\n  ```\r\n- **`<footer>`:** Representa el pie de página de un documento o sección.\r\n  ```html\r\n  <footer>\r\n    <p>&copy; 2023 Mi Sitio Web</p>\r\n  </footer>\r\n  ```\r\n- **`<article>`:** Representa contenido independiente y autocontenido.\r\n  ```html\r\n  <article>\r\n    <h2>Artículo 1</h2>\r\n    <p>Este es el contenido de un artículo.</p>\r\n  </article>\r\n  ```\r\n- **`<section>`:** Define una sección temática dentro de un documento.\r\n  ```html\r\n  <section>\r\n    <h2>Sección de servicios</h2>\r\n    <p>Ofrecemos desarrollo web, diseño gráfico y más.</p>\r\n  </section>\r\n  ```\r\n- **`<nav>`:** Representa un conjunto de enlaces de navegación.\r\n  ```html\r\n  <nav>\r\n    <a href=\"#inicio\">Inicio</a>\r\n    <a href=\"#servicios\">Servicios</a>\r\n    <a href=\"#contacto\">Contacto</a>\r\n  </nav>\r\n  ```\r\n- **`<aside>`:** Contenido relacionado o complementario al contenido principal.\r\n  ```html\r\n  <aside>\r\n    <h3>Noticias Recientes</h3>\r\n    <p>Nuevo artículo publicado en el blog.</p>\r\n  </aside>\r\n  ```\r\n- **`<main>`:** Contenido principal del documento.\r\n  ```html\r\n  <main>\r\n    <h2>Bienvenidos a nuestra página principal</h2>\r\n    <p>Aquí encontrarás información relevante.</p>\r\n  </main>\r\n  ```\r\n- **`<figure>` y `<figcaption>`:** Usados para contenido gráfico con leyenda.\r\n  ```html\r\n  <figure>\r\n    <img src=\"imagen.jpg\" alt=\"Paisaje hermoso\">\r\n    <figcaption>Un hermoso paisaje natural.</figcaption>\r\n  </figure>\r\n  ```\r\n- **`<audio>`:** Reproduce contenido de audio en la página. \r\n**Atributos:**\r\n  - `src`: Ruta al archivo de audio.\r\n  - `controls`: Muestra los controles para reproducir el audio.\r\n  ```html\r\n  <audio src=\"audio.mp3\" controls>\r\n    Tu navegador no soporta la etiqueta de audio.\r\n  </audio>\r\n  ```\r\n- **`<video>`:** Reproduce contenido de video en la página. **Atributos:**\r\n  - `src`: Ruta al archivo de video.\r\n  - `controls`: Muestra los controles para reproducir el video.\r\n  - `width` y `height`: Dimensiones del reproductor de video.\r\n  ```html\r\n  <video src=\"video.mp4\" controls width=\"640\" height=\"360\">\r\n    Tu navegador no soporta la etiqueta de video.\r\n  </video>\r\n- **`<time>`:** Representa una fecha u hora específica.\r\n  ```html\r\n  <p>Publicado el <time datetime=\"2023-01-01\">1 de enero de 2023</time>.</p>\r\n  ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**HTML Entities:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- Los **HTML Entities** son caracteres especiales representados por una secuencia específica en HTML para que se muestren correctamente en el navegador. Esto es útil para incluir símbolos, caracteres reservados o acentos en el contenido.\r\n\r\n**Ejemplos Comunes:**\r\n  - `&lt;`: Representa el símbolo `<`.\r\n  - `&gt;`: Representa el símbolo `>`.\r\n  - `&amp;`: Representa el símbolo `&`.\r\n  - `&quot;`: Representa las comillas dobles `\"`.\r\n  - `&apos;`: Representa las comillas simples `'`.\r\n  - `&ntilde;`: Representa la eñe miniscula `ñ`.\r\n  - `&Ntilde;`: Representa la eñe mayuscula `Ñ`."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Ejemplo Práctico:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<p>Usar &lt;html&gt; para definir el documento HTML.</p>\r\n<p>La diversidad de la Lengua Espa&ntilde;ola.</p>\r\n<p>El símbolo de ampersand se representa como &amp;.</p>\r\n<p>Las comillas dobles se escriben como &quot;texto&quot; y las simples como &apos;texto&apos;.</p>\r\n<p>Matrócula</pa>\r\n<p>Matr&iacute;cula</pa>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<p>Usar &lt;html&gt; para definir el documento HTML.</p>\r",
                                "<p>La diversidad de la Lengua Espa&ntilde;ola.</p>\r",
                                "<p>El símbolo de ampersand se representa como &amp;.</p>\r",
                                "<p>Las comillas dobles se escriben como &quot;texto&quot; y las simples como &apos;texto&apos;.</p>\r",
                                "<p>Matr&iacute;cula</pa>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "Resultado visual:\r\n- Usar `<html>` para definir el documento HTML.\r\n- El símbolo de ampersand se representa como `&`.\r\n- Las comillas dobles se escriben como \"texto\" y las simples como 'texto'."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Custom Attributes:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "\r\n- Los **Custom Attributes** (atributos personalizados) son atributos definidos por el desarrollador que no son nativos de HTML. Estos atributos permiten almacenar datos personalizados asociados a un elemento.\r\n\r\n**Definición:**\r\n- Siempre comienzan con `data-` seguido de un nombre, como `data-id` o `data-role`.\r\n- Se utilizan para agregar información adicional que puede ser leída mediante JavaScript.\r\n\r\n**Ejemplo Práctico:**\r\n```html\r\n<div data-id=\"123\" data-role=\"admin\">\r\n  Usuario: Juan Pérez\r\n</div>\r\n```\r\n\r\n**Explicación del Ejemplo:**\r\n- `data-id=\"123\"`: Almacena un identificador único para el elemento.\r\n- `data-role=\"admin\"`: Define un rol específico (en este caso, \"admin\")."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Ejercicio Práctico:  Creando una Página HTML con Tarjeta de Usuario\r\n\r\n**Objetivo:**\r\nConstruir una tarjeta de usuario utilizando únicamente HTML5 semántico para estructurar el contenido."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "---"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Requerimientos:**\r\n\r\n1. Crear una estructura con etiquetas HTML5 semánticas.\r\n   - **Crea un documento HTML** siguiendo la estructura de web semantica.\r\n   - **Incluye etiquetas semánticas de HTML5** como `<header>`, `<main>`, `<section>`, `<article>` y `<footer>`.\r\n   - **Personaliza el contenido** con tu propio texto e imágenes.\r\n   - **Configura el menú de navegación**:\r\n      - Asegúrate de que los enlaces en el menú de navegación (Inicio, Acerca de, Contacto) apunten correctamente a sus respectivas secciones mediante anclajes (#home, #about, #contact).\r\n   - **Agrega descripciones adecuadas en los atributos `alt`** de las imágenes para mejorar la accesibilidad.\r\n   - **Incluye un pie de página** que contenga derechos de autor y personaliza el texto según tu preferencia.\r\n   - **Revisa tu código** para asegurarte de que cumple con las especificaciones y se renderiza correctamente en el navegador."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "2. Incluir los siguientes elementos dentro del `<article>`:\r\n   - Una imagen de perfil con `<img>`.\r\n   - Un encabezado `<h2>` con el nombre del usuario.\r\n   - Un párrafo `<p>` con una descripción breve.\r\n   - Un enlace `<a>` dentro del `<footer>` que diga \"Ver más detalles\"."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Resultado esperado:**\r\nLa tarjeta debe mostrar:\r\n1. Una imagen de perfil en la parte superior.\r\n2. El nombre del usuario destacado en un `<h2>`.\r\n3. Una descripción breve en un `<p>`.\r\n4. Un enlace \"Ver más detalles\" en el pie de la tarjeta.\r\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "---"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<html>\r\n\r\n<head>\r\n    <title>Practica Web HTML5</title>\r\n</head>\r\n\r\n<body>\r\n    <header>\r\n        <h1>Bienvenido a Web HTML5</h1>\r\n        <nav>\r\n            <ol>\r\n                <li><a href=\"#home\">Inicio</a></li>\r\n                <li><a href=\"#about\">Acerca de</a></li>\r\n                <li><a href=\"#contact\">Contacto</a></li>\r\n            </ol>\r\n        </nav>\r\n    </header>\r\n    <main>\r\n        <section id=\"home\">\r\n            <h2>Inicio</h2>\r\n            <p>Esta es la sección de inicio</p>\r\n            <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\r\n                veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\r\n                velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\r\n                anim id est laborum.\r\n            </p>\r\n        </section>\r\n        <section id=\"about\">\r\n            <h2>Acerca de</h2>\r\n            <p>Esta es la sección de Acerca de</p>\r\n        </section>\r\n        <section id=\"contact\">\r\n            <h2>Contacto</h2>\r\n            <p>Esta es la sección de contacto</p>\r\n        </section>\r\n        <article>\r\n            <header>\r\n                <img src=\"https://placehold.co/150x150\" />\r\n            </header>\r\n            <section>\r\n                <h2>Gauris Javier</h2>\r\n                <p>Desarrollador de software con mas de 13 años de</p>\r\n            </section>\r\n            <footer><a href=\"#\">Ver m&aacute;s detalles</a></footer>\r\n        </article>\r\n    </main>\r\n    <footer>\r\n        <p>&copy; 2025 - Derechos Reservados Talendig</p>\r\n    </footer>\r\n</body>\r\n\r\n</html>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<html>\r",
                                "    <head>\r",
                                "        <title>Practica Web HTML5</title>\r",
                                "    </head>\r",
                                "    <body>\r",
                                "        <header>\r",
                                "            <h1>Bienvenido a Web HTML5</h1>\r",
                                "            <nav>\r",
                                "                <ol>\r",
                                "                    <li><a href=\"#home\">Inicio</a></li>\r",
                                "                    <li><a href=\"#about\">Acerca de</a></li>\r",
                                "                    <li><a href=\"#contact\">Contacto</a></li>\r",
                                "                </ol>\r",
                                "            </nav>\r",
                                "        </header>\r",
                                "        <main>\r",
                                "            <section id=\"home\">\r",
                                "                <h2>Inicio</h2>\r",
                                "                <p>Esta es la sección de inicio</p>\r",
                                "            </section>\r",
                                "            <section id=\"about\">\r",
                                "                <h2>Acerca de</h2>\r",
                                "                <p>Esta es la sección de Acerca de</p>\r",
                                "            </section>\r",
                                "            <section id=\"contact\">\r",
                                "                <h2>Contacto</h2>\r",
                                "                <p>Esta es la sección de contacto</p>\r",
                                "            </section>\r",
                                "            <article>\r",
                                "                <header>\r",
                                "                    <img src=\"https://placehold.co/150x150\"/>\r",
                                "                </header>\r",
                                "                <section>\r",
                                "                    <h2>Gauris Javier</h2>\r",
                                "                    <p>Desarrollador de software con mas de 13 años de</p>\r",
                                "                </section>\r",
                                "                <footer><a href=\"#\">Ver m&aacute;s detalles</a></footer>\r",
                                "            </article>\r",
                                "        </main>\r",
                                "        <footer>\r",
                                "            <p>&copy; 2025 - Derechos Reservados Talendig</p>\r",
                                "        </footer>\r",
                                "    </body>\r",
                                "</html>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## Clase 2: Introducción a CSS (Cascade-Styled Sheet)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### Objetivo:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Aprender los conceptos básicos de CSS y su aplicación."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Definición:** Lenguaje para estilizar páginas web.\r\n\r\n**Conceptos Clave:**\r\n- Selectores básicos: `element`, `class`, `id`.\r\n- Propiedades: `color`, `background-color`, `font-size`, `margin`, `padding`.\r\n- Box Model.\r\n\r\n**Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n  <style>\r\n    @scope {\r\n      header {\r\n        font-family: Arial, sans-serif;\r\n        background-color: #f0f0f0 !important;\r\n      }\r\n\r\n      h1 {\r\n        color: green;\r\n        text-align: center;\r\n      }\r\n\r\n\r\n      p {\r\n        color: gray;\r\n        margin: 10px 20px;\r\n      }\r\n    }\r\n  </style>\r\n</head>\r\n\r\n<body>\r\n  <header>\r\n    &nbsp;\r\n    <h1>Bienvenido a CSS</h1>\r\n    <hr />\r\n    <p>Aprendamos sobre estilos.</p>\r\n    &nbsp;\r\n  </header>\r\n</body>\r\n\r\n</html>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<!DOCTYPE html>\r",
                                "<html>\r",
                                "\r",
                                "<head>\r",
                                "  <style>\r",
                                "    @scope {\r",
                                "      header {\r",
                                "        font-family: Arial, sans-serif;\r",
                                "        background-color: #f0f0f0 !important;\r",
                                "      }\r",
                                "\r",
                                "      h1 {\r",
                                "        color: green;\r",
                                "        text-align: center;\r",
                                "      }\r",
                                "\r",
                                "\r",
                                "      p {\r",
                                "        color: gray;\r",
                                "        margin: 10px 20px;\r",
                                "      }\r",
                                "    }\r",
                                "  </style>\r",
                                "</head>\r",
                                "\r",
                                "<body>\r",
                                "  <header>\r",
                                "    &nbsp;\r",
                                "    <h1>Bienvenido a CSS</h1>\r",
                                "    <hr />\r",
                                "    <p>Aprendamos sobre estilos.</p>\r",
                                "    &nbsp;\r",
                                "  </header>\r",
                                "</body>\r",
                                "\r",
                                "</html>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**Ejercicio Práctico:**\r\n- Modificar el ejemplo para:\r\n  - Cambiar el color del texto.\r\n  - Agregar un borde a los párrafos."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Métodos para Importar CSS"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "CSS se puede aplicar a un documento HTML de varias formas. Aquí se explican las principales:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### 1. **Archivo CSS Externo**\r\n- **Uso:** Utiliza un archivo separado para escribir el código CSS, y enlázalo al HTML mediante la etiqueta `<link>`.\r\n- **Ventajas:**\r\n  - Permite separar el contenido (HTML) del estilo (CSS).\r\n  - Facilita la reutilización del mismo archivo CSS en varias páginas.\r\n- **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<head>\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/style.css\">\r\n</head>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### 2. **CSS Interno**\r\n- **Uso:** Se escribe directamente dentro de la etiqueta `<style>` en la sección `<head>` del documento HTML.\r\n- **Ventajas:**\r\n  - Útil para páginas pequeñas o para estilos específicos de una página.\r\n- **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<head>\r\n    <style>\r\n        div {\r\n            color: #444;\r\n            font-size: 18px;\r\n        }\r\n    </style>\r\n</head>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### 3. **CSS en Línea**\r\n- **Uso:** Se aplica directamente dentro de una etiqueta HTML mediante el atributo `style`.\r\n- **Ventajas:**\r\n  - Útil para estilos rápidos o temporales.\r\n- **Desventajas:**\r\n  - No es recomendable para proyectos grandes, ya que mezcla contenido y estilos, lo que dificulta el mantenimiento.\r\n- **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div style=\"color: blue; font-size: 20px;\">Texto con estilo en línea</div>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### Resumen\r\n| Método           | Ventaja                                   | Desventaja                                |\r\n|------------------|-------------------------------------------|-------------------------------------------|\r\n| **Externo**      | Reutilizable, facilita mantenimiento      | Necesita más archivos                     |\r\n| **Interno**      | Útil para estilos específicos             | Solo afecta una página                   |\r\n| **En Línea**     | Fácil de usar para ajustes rápidos        | Dificulta la separación de contenido y estilos |\r\n\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Explicación de Colores y Transparencia HEX"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/34efd9af58266c97f0fccf430e6908220e4a8922/image.png\" height=\"300px\">\r\n<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/34efd9af58266c97f0fccf430e6908220e4a8922/image-1.png\" height=\"300px\">"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### 1. **Colores Hexadecimales (HEX)**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- Los colores HEX son una forma de representar colores en CSS utilizando un código hexadecimal.\r\n- **Formato:** `#RRGGBB` donde:\r\n  - `RR`: Representa el rojo (00 a FF en hexadecimal, 0 a 255 en decimal).\r\n  - `GG`: Representa el verde (00 a FF en hexadecimal, 0 a 255 en decimal).\r\n  - `BB`: Representa el azul (00 a FF en hexadecimal, 0 a 255 en decimal).\r\n\r\n##### Tabla de Conversión de Hexadecimal a Decimal:\r\n| Hexadecimal | Decimal | Porcentaje |\r\n|-------------|---------|------------|\r\n| `00`        | 0       | 0%         |\r\n| `40`        | 64      | 25%        |\r\n| `80`        | 128     | 50%        |\r\n| `BF`        | 191     | 75%        |\r\n| `FF`        | 255     | 100%       |\r\n\r\n- **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    @scope {\r\n        div {\r\n            background-color: #FF5733;\r\n            /* Un tono de naranja */\r\n            color: #000000;\r\n            /* Negro */\r\n            width: 100px;\r\n            height: 100px;\r\n        }\r\n    }\r\n</style>\r\n<div></div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    @scope {\r",
                                "        div {\r",
                                "            background-color: #FF5733; /* Un tono de naranja */\r",
                                "            color: #000000; /* Negro */\r",
                                "            width: 100px;\r",
                                "            height: 100px;\r",
                                "        }\r",
                                "    }\r",
                                "</style>\r",
                                "<div></div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "##### 2. **Colores Hexadecimales con Alpha (HEX8)**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- El formato HEX puede incluir un componente alpha para definir la opacidad del color.\r\n- **Formato:** `#RRGGBBAA` donde:\r\n  - `AA`: Representa la opacidad en valores hexadecimales (00 a FF).\r\n\r\n##### Tabla de Conversión para Alpha:\r\n| Hexadecimal | Decimal | Opacidad |\r\n|-------------|---------|----------|\r\n| `00`        | 0       | 0%       |\r\n| `40`        | 64      | 25%      |\r\n| `80`        | 128     | 50%      |\r\n| `BF`        | 191     | 75%      |\r\n| `FF`        | 255     | 100%     |\r\n\r\n- **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    @scope {\r\n        main div:nth-child(1) {\r\n            display: inline-block;\r\n            background-color: #FF573300;\r\n            /* Un tono de naranja */\r\n            width: 100px;\r\n            height: 100px;\r\n            border: solid 1px white;\r\n        }\r\n\r\n        main div:nth-child(2) {\r\n            display: inline-block;\r\n            background-color: #FF573340;\r\n            /* Un tono de naranja */\r\n            width: 100px;\r\n            height: 100px;\r\n        }\r\n\r\n        main div:nth-child(3) {\r\n            display: inline-block;\r\n            background-color: #FF573380;\r\n            /* Un tono de naranja */\r\n            width: 100px;\r\n            height: 100px;\r\n        }\r\n\r\n        main div:nth-child(4) {\r\n            display: inline-block;\r\n            background-color: #FF5733BF;\r\n            /* Un tono de naranja */\r\n            width: 100px;\r\n            height: 100px;\r\n        }\r\n\r\n        main div:nth-child(5) {\r\n            display: inline-block;\r\n            background-color: #FF5733FF;\r\n            /* Un tono de naranja */\r\n            width: 100px;\r\n            height: 100px;\r\n        }\r\n    }\r\n</style>\r\n<main>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n</main>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    @scope {\r",
                                "        main div:nth-child(1) {\r",
                                "            display: inline-block;\r",
                                "            background-color: #FF573300; /* Un tono de naranja */\r",
                                "            width: 100px;\r",
                                "            height: 100px;\r",
                                "            border: solid 1px white;\r",
                                "        }\r",
                                "        main div:nth-child(2) {\r",
                                "            display: inline-block;\r",
                                "            background-color: #FF573340; /* Un tono de naranja */\r",
                                "            width: 100px;\r",
                                "            height: 100px;\r",
                                "        }\r",
                                "        main div:nth-child(3) {\r",
                                "            display: inline-block;\r",
                                "            background-color: #FF573380; /* Un tono de naranja */\r",
                                "            width: 100px;\r",
                                "            height: 100px;\r",
                                "        }\r",
                                "        main div:nth-child(4) {\r",
                                "            display: inline-block;\r",
                                "            background-color: #FF5733BF; /* Un tono de naranja */\r",
                                "            width: 100px;\r",
                                "            height: 100px;\r",
                                "        }\r",
                                "        main div:nth-child(5) {\r",
                                "            display: inline-block;\r",
                                "            background-color: #FF5733FF; /* Un tono de naranja */\r",
                                "            width: 100px;\r",
                                "            height: 100px;\r",
                                "        }\r",
                                "    }\r",
                                "</style>\r",
                                "<main>\r",
                                "    <div></div>\r",
                                "    <div></div>\r",
                                "    <div></div>\r",
                                "    <div></div>\r",
                                "    <div></div>\r",
                                "    <div></div>\r",
                                "</main>\r",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "##### 3. **Colores RGBA**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- Otra forma de definir colores con opacidad es mediante `rgba()`.\r\n- **Formato:** `rgba(red, green, blue, alpha)` donde:\r\n  - `red`, `green`, `blue`: Valores entre 0 y 255.\r\n  - `alpha`: Un número entre 0 (transparente) y 1 (opaco).\r\n\r\n- **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<main>\r\n    <style>\r\n        @scope {\r\n            div {\r\n                width: 100px;\r\n                height: 100px;\r\n                background-color: rgba(255, 87, 51, 0.1);\r\n                /* Igual a una opacidad de 10% */\r\n            }\r\n        }\r\n    </style>\r\n    <div></div>\r\n</main>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<main>\r",
                                "    <style>\r",
                                "        @scope {\r",
                                "            div {\r",
                                "                width: 100px;\r",
                                "                height: 100px;\r",
                                "                background-color: rgba(255, 87, 51, 0.1);\r",
                                "                /* Igual a una opacidad de 10% */\r",
                                "            }\r",
                                "        }\r",
                                "    </style>\r",
                                "    <div></div>\r",
                                "</main>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "##### Resumen de Colores y Transparencia\r\n| Método            | Formato            | Ejemplo             |\r\n|-------------------|--------------------|---------------------|\r\n| **HEX**           | `#RRGGBB`          | `#FF5733`           |\r\n| **HEX con Alpha** | `#RRGGBBAA`        | `#FF573380`         |\r\n| **RGBA**          | `rgba(r, g, b, a)` | `rgba(255, 87, 51, 0.5)` |"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Reglas de Estilos Básicas en CSS"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Aquí están las propiedades básicas más utilizadas en CSS junto con sus explicaciones y ejemplos:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### 1. **Color de Texto**\r\n- **Propiedad:** `color`\r\n- **Ejemplo:**\r\n```css\r\n    selector {\r\n      color: red;\r\n    }"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### 2. **Color de Fondo**\r\n- **Propiedad:** `background-color`\r\n- **Ejemplo:**\r\n```css\r\n        selector {\r\n          background-color: yellow;\r\n        }\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### 3. **Fuente**\r\n- **Propiedad:** `font-family`\r\n- **Ejemplo:**\r\n```css\r\n        selector {\r\n          font-family: Arial, sans-serif;\r\n        }\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### 4. **Tamaño de Fuente**\r\n- **Propiedad:** `font-size`\r\n- **Ejemplo:**\r\n```css\r\n        selector {\r\n          font-size: 16px;\r\n        }\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### 5. **Ancho y Altura**\r\n- **Propiedades:** `width`, `height`\r\n- **Ejemplo:**\r\n```css\r\n        selector {\r\n          width: 100px;\r\n          height: 50px;\r\n        }\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### 6. **Margen**\r\n- **Propiedad:** `margin`\r\n- **Ejemplo:**\r\n```css\r\n        selector {\r\n          margin: 10px;\r\n        }\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### 7. **Relleno**\r\n- **Propiedad:** `padding`\r\n- **Ejemplo:**\r\n```css\r\n        selector {\r\n          padding: 10px;\r\n        }\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### 8. **Borde**\r\n- **Propiedad:** `border`\r\n- **Ejemplo:**\r\n```css\r\n    selector {\r\n        border: 1px solid black;\r\n    }\r\n```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Tipos de Selectores Básicos en CSS"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Los **selectores básicos en CSS** se utilizan para aplicar estilos a elementos específicos en un documento HTML. Aquí están los principales tipos, su definición y ejemplos prácticos:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### 1. Selector de Elemento (Type Selector)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **Definición:** Aplica estilos a todos los elementos de un tipo específico.\r\n- **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div>\r\n    <style>\r\n        @scope {\r\n            p {\r\n                color: red;\r\n                font-size: 20px;\r\n            }\r\n        }\r\n    </style>\r\n    <p>Este párrafo será azul.</p>\r\n    <p>Este también será azul.</p>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div>\r",
                                "    <style>\r",
                                "        @scope {\r",
                                "            p {\r",
                                "                color: red;\r",
                                "                font-size: 20px;\r",
                                "            }\r",
                                "        }\r",
                                "    </style>\r",
                                "    <p>Este párrafo será azul.</p>\r",
                                "    <p>Este también será azul.</p>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "#### 2. Selector de Clase (Class Selector)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **Definición:** Aplica estilos a todos los elementos que tengan una clase específica. Las clases se definen con un punto (`.`) seguido del nombre de la clase.\r\n- **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div>\r\n    <style>\r\n        @scope {\r\n            .card {\r\n                border: 1px solid red;\r\n                padding: 10px;\r\n                border-radius: 5px;\r\n            }\r\n        }\r\n    </style>\r\n    <div class=\"card\">Este es un contenedor con clase \"card\".</div>\r\n    <div class=\"card\">Otro contenedor con el mismo estilo.</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div>\r",
                                "    <style>\r",
                                "        @scope {\r",
                                "            .card {\r",
                                "                border: 1px solid red;\r",
                                "                padding: 10px;\r",
                                "                border-radius: 5px;\r",
                                "            }\r",
                                "        }\r",
                                "    </style>\r",
                                "    <div class=\"card\">Este es un contenedor con clase \"card\".</div>\r",
                                "    <div class=\"card\">Otro contenedor con el mismo estilo.</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "#### 3. Selector de ID (ID Selector)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **Definición:** Aplica estilos a un elemento único identificado por un ID. Los IDs se definen con un signo de número (`#`) seguido del nombre del ID.\r\n- **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div>\r\n    <style>\r\n        @scope {\r\n            #header1 {\r\n                background-color: #f4f4f4;\r\n                padding: 20px;\r\n                color: black;\r\n            }\r\n        }\r\n    </style>\r\n    <header id=\"header1\">Este es el encabezado 1 único.</header>\r\n    <header id=\"header2\">Este es el encabezado 2 único.</header>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div>\r",
                                "    <style>\r",
                                "        @scope {\r",
                                "            #header1 {\r",
                                "                background-color: #f4f4f4;\r",
                                "                padding: 20px;\r",
                                "                color: black;\r",
                                "            }\r",
                                "        }\r",
                                "    </style>\r",
                                "    <header id=\"header1\">Este es el encabezado 1 único.</header>\r",
                                "    <header id=\"header2\">Este es el encabezado 2 único.</header>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "#### 4. Selector Universal (Universal Selector)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **Definición:** Aplica estilos a todos los elementos del documento. Se utiliza un asterisco (`*`).\r\n- **Nota:** Puedes usar `!important` dentro de las reglas CSS para sobrescribir cualquier otro estilo aplicado al mismo elemento.\r\n\r\n- **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<di>\r\n  <style>\r\n    @scope {\r\n      * {\r\n        margin: 0;\r\n        padding: 0;\r\n        color: red;\r\n      }\r\n    }\r\n  </style>\r\n  <p>Esto eliminará los márgenes y el padding y cambia a azul todos los elementos.</p>\r\n  <div>Esto eliminará los márgenes y el padding y cambia a azul todos los elementos.</div>\r\n  <span>Esto eliminará los márgenes y el padding y cambia a azul todos los elementos.</span>\r\n  <button>Esto eliminará los márgenes y el padding y cambia a azul todos los elementos.</button>\r\n</di>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<di>\r",
                                "  <style>\r",
                                "    @scope {\r",
                                "      * {\r",
                                "        margin: 0;\r",
                                "        padding: 0;\r",
                                "        color: red;\r",
                                "      }\r",
                                "    }\r",
                                "  </style>\r",
                                "  <p>Esto eliminará los márgenes y el padding y cambia a azul todos los elementos.</p>\r",
                                "  <div>Esto eliminará los márgenes y el padding y cambia a azul todos los elementos.</div>\r",
                                "  <span>Esto eliminará los márgenes y el padding y cambia a azul todos los elementos.</span>\r",
                                "  <button>Esto eliminará los márgenes y el padding y cambia a azul todos los elementos.</button>\r",
                                "</di>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "#### 5. Selector de Agrupación (Group Selector)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **Definición:** Aplica un mismo estilo a múltiples elementos. Se separan los selectores por comas.\r\n- **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div>\r\n  <style>\r\n    @scope {\r\n\r\n      h1,\r\n      h2,\r\n      h3 {\r\n        font-family: Arial, sans-serif;\r\n        color: green;\r\n      }\r\n    }\r\n  </style>\r\n  <h1>Encabezado 1</h1>\r\n  <h2>Encabezado 2</h2>\r\n  <h3>Encabezado 3</h3>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div>\r",
                                "  <style>\r",
                                "    @scope {\r",
                                "\r",
                                "      h1,\r",
                                "      h2,\r",
                                "      h3 {\r",
                                "        font-family: Arial, sans-serif;\r",
                                "        color: green;\r",
                                "      }\r",
                                "    }\r",
                                "  </style>\r",
                                "  <h1>Encabezado 1</h1>\r",
                                "  <h2>Encabezado 2</h2>\r",
                                "  <h3>Encabezado 3</h3>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "#### 6. Selector de Descendientes (Descendant Selector)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **Definición:** Aplica estilos a los elementos dentro de un contenedor específico.\r\n- **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div>\r\n    <style>\r\n        @scope {\r\n            nav a {\r\n                text-decoration: none;\r\n                color: red;\r\n            }\r\n        }\r\n    </style>\r\n    <nav>\r\n        <a href=\"#\">Enlace 1</a>\r\n        <a href=\"#\">Enlace 2</a>\r\n    </nav>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div>\r",
                                "    <style>\r",
                                "        @scope {\r",
                                "            nav a {\r",
                                "                text-decoration: none;\r",
                                "                color: red;\r",
                                "            }\r",
                                "        }\r",
                                "    </style>\r",
                                "    <nav>\r",
                                "        <a href=\"#\">Enlace 1</a>\r",
                                "        <a href=\"#\">Enlace 2</a>\r",
                                "    </nav>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "#### 7. Selector de Atributo (Attribute Selector)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **Definición:** permite aplicar estilos a los elementos HTML que tienen atributos específicos o valores de atributos que cumplen ciertas condiciones."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "1. **Atributo Existente:** Selecciona elementos que contienen un atributo específico, sin importar su valor."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div>\r\n    <style>\r\n        @scope {\r\n            [type] {\r\n                border: 3px solid red;\r\n            }\r\n        }\r\n    </style>\r\n    <input type=\"text\" placeholder=\"text\"> &nbsp;\r\n    <input type=\"password\" placeholder=\"password\">\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div>\r",
                                "    <style>\r",
                                "        @scope {\r",
                                "            [type] {\r",
                                "                border: 3px solid red;\r",
                                "            }\r",
                                "        }\r",
                                "    </style>\r",
                                "    <input type=\"text\" placeholder=\"text\"> &nbsp;\r",
                                "    <input type=\"password\" placeholder=\"password\">\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "2. **Valor Exacto:** Selecciona elementos con un atributo que tenga un valor exacto."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div>\r\n    <style>\r\n        @scope {\r\n            [type=\"text\"] {\r\n                border: 3px solid red;\r\n            }\r\n        }\r\n    </style>\r\n    <input type=\"text\" placeholder=\"text\"> &nbsp;\r\n    <input type=\"password\" placeholder=\"password\">\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div>\r",
                                "    <style>\r",
                                "        @scope {\r",
                                "            [type=\"text\"] {\r",
                                "                border: 3px solid red;\r",
                                "            }\r",
                                "        }\r",
                                "    </style>\r",
                                "    <input type=\"text\" placeholder=\"text\"> &nbsp;\r",
                                "    <input type=\"password\" placeholder=\"password\">\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "3. **Valor que Comienza con:** Selecciona elementos cuyo valor de atributo comienza con una cadena específica."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div>\r\n    <style>\r\n        @scope {\r\n            [type^=\"pass\"] {\r\n                border: 3px solid red;\r\n            }\r\n        }\r\n    </style>\r\n    <input type=\"password\" placeholder=\"password\">&nbsp;\r\n    <input type=\"wordpass\" placeholder=\"wordpass\">&nbsp;\r\n    <input type=\"text\" placeholder=\"text\">&nbsp;\r\n    <input type=\"passcode\" placeholder=\"passcode\">\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div>\r",
                                "    <style>\r",
                                "        @scope {\r",
                                "            [type^=\"pass\"] {\r",
                                "                border: 3px solid red;\r",
                                "            }\r",
                                "        }\r",
                                "    </style>\r",
                                "    <input type=\"password\"  placeholder=\"password\">&nbsp;\r",
                                "    <input type=\"wordpass\"  placeholder=\"wordpass\">&nbsp;\r",
                                "    <input type=\"text\"  placeholder=\"text\">&nbsp;\r",
                                "    <input type=\"passcode\"  placeholder=\"passcode\">\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "4. **Valor que Contiene:** Selecciona elementos cuyo valor de atributo contiene una cadena específica."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div>\r\n    <style>\r\n        @scope {\r\n            [type*=\"word\"] {\r\n                border: 3px solid red;\r\n            }\r\n        }\r\n    </style>\r\n    <input type=\"password\" placeholder=\"password\">&nbsp;\r\n    <input type=\"text\" placeholder=\"text\">&nbsp;\r\n    <input type=\"keyword\" placeholder=\"keyword\">&nbsp;\r\n    <input type=\"passcode\" placeholder=\"passcode\">\r\n    <input type=\"wordpass\" placeholder=\"wordpass\">&nbsp;\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div>\r",
                                "    <style>\r",
                                "        @scope {\r",
                                "            [type*=\"word\"] {\r",
                                "                border: 3px solid red;\r",
                                "            }\r",
                                "        }\r",
                                "    </style>\r",
                                "    <input type=\"password\" placeholder=\"password\">&nbsp;\r",
                                "    <input type=\"text\" placeholder=\"text\">&nbsp;\r",
                                "    <input type=\"keyword\" placeholder=\"keyword\">&nbsp;\r",
                                "    <input type=\"passcode\" placeholder=\"passcode\">\r",
                                "    <input type=\"wordpass\" placeholder=\"wordpass\">&nbsp;\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "5. **Valor que Termina con:** Selecciona elementos cuyo valor de atributo termina con una cadena específica."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div>\r\n    <style>\r\n        @scope {\r\n            [type$=\"word\"] {\r\n                border: 3px solid red;\r\n            }\r\n        }\r\n    </style>\r\n    <input type=\"password\" placeholder=\"password\">&nbsp;\r\n    <input type=\"text\" placeholder=\"text\">&nbsp;\r\n    <input type=\"keyword\" placeholder=\"keyword\">&nbsp;\r\n    <input type=\"passcode\" placeholder=\"passcode\">\r\n    <input type=\"wordpass\" placeholder=\"wordpass\">&nbsp;\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div>\r",
                                "    <style>\r",
                                "        @scope {\r",
                                "            [type$=\"word\"] {\r",
                                "                border: 3px solid red;\r",
                                "            }\r",
                                "        }\r",
                                "    </style>\r",
                                "    <input type=\"password\" placeholder=\"password\">&nbsp;\r",
                                "    <input type=\"text\" placeholder=\"text\">&nbsp;\r",
                                "    <input type=\"keyword\" placeholder=\"keyword\">&nbsp;\r",
                                "    <input type=\"passcode\" placeholder=\"passcode\">\r",
                                "    <input type=\"wordpass\" placeholder=\"wordpass\">&nbsp;\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "### Modelo de Caja (Box Model)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "El **Modelo de Caja (Box Model)** es un concepto fundamental en CSS que describe cómo se construyen y organizan los elementos y espaciados en cajas rectangulares (incluyendo sus rellenos y márgenes) dentro una página web. Cada elemento HTML se considera una caja rectangular compuesta de las siguientes partes:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/78b9de362d1daf8f5468739a20c4e133ee95d3b9/box-model.png\" height=\"250px\"/>&nbsp;\r\n<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/b0a7adf3e6f6e4d79217bad2373cc29726336552/image-10.png\" height=\"250px\"/>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### Partes del Box Model:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "1. **Contenido (Content):**\r\n   - El área donde se muestra el contenido, como texto o imágenes.\r\n   - Controlado por propiedades como `width` y `height`.\r\n\r\n2. **Relleno (Padding):**\r\n   - El espacio entre el contenido y el borde del elemento.\r\n   - Controlado por la propiedad `padding`.\r\n\r\n3. **Borde (Border):**\r\n   - El límite que rodea el contenido y el relleno.\r\n   - Controlado por la propiedad `border`.\r\n\r\n4. **Margen (Margin):**\r\n   - El espacio exterior que separa el elemento de otros elementos.\r\n   - Controlado por la propiedad `margin`."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### Ejemplo Visual:"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div style=\"border: solid 1px\">\r\n    <style>\r\n        @scope {\r\n            .box {\r\n                width: 200px;\r\n                height: 100px;\r\n                padding: 10px;\r\n                border: 2px solid red;\r\n                margin: 20px;\r\n                background-color: lightblue;\r\n                color: black;\r\n            }\r\n        }\r\n    </style>\r\n    <div class=\"box\">Esto es un ejemplo de Box Model.</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div style=\"border: solid 1px\">\r",
                                "    <style>\r",
                                "        @scope {\r",
                                "            .box {\r",
                                "                width: 200px;\r",
                                "                height: 100px;\r",
                                "                padding: 10px;\r",
                                "                border: 2px solid red;\r",
                                "                margin: 20px;\r",
                                "                background-color: lightblue;\r",
                                "                color: black;\r",
                                "            }\r",
                                "        }\r",
                                "    </style>\r",
                                "    <div class=\"box\">Esto es un ejemplo de Box Model.</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "##### Explicación del Ejemplo:\r\n1. **Contenido:** Tiene un ancho de `200px` y un alto de `100px`.\r\n2. **Relleno:** Añade `10px` de espacio interno alrededor del contenido.\r\n3. **Borde:** Define un borde sólido de `2px` de grosor.\r\n4. **Margen:** Separa la caja de otros elementos con `20px` de espacio exterior.\r\n\r\n##### Nota:\r\n- El tamaño total del elemento incluye el contenido, el relleno, el borde y el margen.\r\n- Para calcular el tamaño total de un elemento:\r\n  ```\r\n  Ancho Total = width + padding-left + padding-right + border-left + border-right\r\n  Alto Total = height + padding-top + padding-bottom + border-top + border-bottom\r\n  ```\r\n```markdown"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Relleno (Padding)**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/b0a7adf3e6f6e4d79217bad2373cc29726336552/image-11.png\" height=\"300px\">\r\n&nbsp;\r\n<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/b0a7adf3e6f6e4d79217bad2373cc29726336552/image-12.png\" height=\"300px\">\r\n&nbsp;\r\n<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/b0a7adf3e6f6e4d79217bad2373cc29726336552/image-13.png\" height=\"300px\">"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### Explicación de `box-sizing`"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "El atributo `box-sizing` en CSS determina cómo se calculan el ancho y alto de un elemento, afectando la forma en que se aplican el contenido, el padding y el borde dentro del modelo de caja."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### Valores Comunes de `box-sizing`"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "1. **`content-box` (por defecto):**\r\n   - **Descripción:** El ancho y alto especificados solo incluyen el área del contenido. El padding y el borde se suman al tamaño total.\r\n   - **Ejemplo:**\r\n   ```css\r\n   div {\r\n     width: 200px;\r\n     height: 100px;\r\n     padding: 20px;\r\n     border: 10px solid black;\r\n     box-sizing: content-box;\r\n   }\r\n   ```\r\n   - **Cálculo del Tamaño Total:**\r\n     - Ancho Total = `200px` (contenido) + `40px` (padding) + `20px` (borde) = `260px`\r\n     - Alto Total = `100px` (contenido) + `40px` (padding) + `20px` (borde) = `160px`"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "2. **`border-box`:**\r\n   - **Descripción:** El ancho y alto especificados incluyen el contenido, el padding y el borde.\r\n   - **Ejemplo:**\r\n   ```css\r\n   div {\r\n     width: 200px;\r\n     height: 100px;\r\n     padding: 20px;\r\n     border: 10px solid black;\r\n     box-sizing: border-box;\r\n   }\r\n   ```\r\n   - **Cálculo del Tamaño Total:**\r\n     - Ancho Total = `200px` (incluye contenido, padding y borde)\r\n     - Alto Total = `100px` (incluye contenido, padding y borde)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### Ejemplo Visual:"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .content-box-example {\r\n        box-sizing: content-box;\r\n        color: black;\r\n        width: 200px;\r\n        height: 200px;\r\n        padding: 20px;\r\n        border: 10px solid black;\r\n        background-color: lightblue;\r\n    }\r\n\r\n    .border-box-example {\r\n        box-sizing: border-box;\r\n        color: black;\r\n        width: 200px;\r\n        height: 200px;\r\n        padding: 20px;\r\n        border: 10px solid black;\r\n        background-color: lightgreen;\r\n    }\r\n</style>\r\n<div class=\"content-box-example\">\r\n    Content-box\r\n</div>\r\n&nbsp;\r\n<div class=\"border-box-example\">\r\n    Border-box\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .content-box-example {\r",
                                "        box-sizing: content-box;\r",
                                "        color: black;\r",
                                "        width: 200px;\r",
                                "        height: 200px;\r",
                                "        padding: 20px;\r",
                                "        border: 10px solid black;\r",
                                "        background-color: lightblue;\r",
                                "    }\r",
                                "\r",
                                "    .border-box-example {\r",
                                "        box-sizing: border-box;\r",
                                "        color: black;\r",
                                "        width: 200px;\r",
                                "        height: 200px;\r",
                                "        padding: 20px;\r",
                                "        border: 10px solid black;\r",
                                "        background-color: lightgreen;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"content-box-example\">\r",
                                "    Content-box\r",
                                "</div>\r",
                                "&nbsp;\r",
                                "<div class=\"border-box-example\">\r",
                                "    Border-box\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "##### Nota:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **Uso Recomendado:**\r\n  Es común usar `box-sizing: border-box;` para evitar cálculos complejos y controlar mejor el diseño.\r\n  ```css\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  ```\r\n- Esto asegura que el padding y el borde no aumenten el tamaño total del elemento, haciendo que el diseño sea más predecible."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Ejercicio Resuelto: Página HTML con Tarjeta de Usuario y Estilos CSS"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<html>\r\n\r\n<head>\r\n    <title>Ejercicio HTML5 - Página Web</title>\r\n    <style>\r\n        @scope {\r\n            main {\r\n                font-family: Arial, sans-serif;\r\n                margin: 0;\r\n                padding: 0;\r\n                background-color: #f9f9f9;\r\n            }\r\n\r\n            header {\r\n                background-color: #4CAF50;\r\n                color: white;\r\n                text-align: center;\r\n                padding: 20px;\r\n            }\r\n\r\n            nav ol {\r\n                display: flex;\r\n                justify-content: center;\r\n                list-style: none;\r\n            }\r\n\r\n            nav ol li {\r\n                margin: 0 15px;\r\n            }\r\n\r\n            nav ol li a {\r\n                text-decoration: none;\r\n                color: white;\r\n                font-weight: bold;\r\n            }\r\n\r\n            main {\r\n                padding: 20px;\r\n            }\r\n\r\n            section {\r\n                color: black;\r\n                padding: 15px;\r\n            }\r\n\r\n            section.section-element {\r\n                margin-bottom: 20px;\r\n                background-color: #fff;\r\n                border: 1px solid #ddd;\r\n                border-radius: 8px;\r\n            }\r\n\r\n            .card {\r\n                background-color: #fff;\r\n                border: 1px solid #ddd;\r\n                border-radius: 8px;\r\n                padding: 15px;\r\n                max-width: 500px;\r\n                margin: 20px auto;\r\n                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n            }\r\n\r\n            .card header img {\r\n                border-radius: 50%;\r\n                margin: 0 auto;\r\n                display: block;\r\n            }\r\n\r\n            .card header section {\r\n                color: black;\r\n            }\r\n\r\n            article.card footer a {\r\n                margin-top: 10px;\r\n                color: #4CAF50;\r\n                text-decoration: none;\r\n                font-weight: bold;\r\n            }\r\n\r\n            article.card footer a:hover {\r\n                color: #308332FF;\r\n            }\r\n\r\n            footer#main-footer-page {\r\n                text-align: center;\r\n                background-color: #4CAF50;\r\n                color: white;\r\n                padding: 10px 0;\r\n                width: 100%;\r\n            }\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n    <header>\r\n        <h1>Bienvenido a Mi Página Web</h1>\r\n        <nav>\r\n            <ol>\r\n                <li><a href=\"#home\">Inicio</a></li>\r\n                <li><a href=\"#about\">Acerca de</a></li>\r\n                <li><a href=\"#contact\">Contacto</a></li>\r\n            </ol>\r\n        </nav>\r\n    </header>\r\n\r\n    <main>\r\n        <section id=\"home\" class=\"section-element\">\r\n            <h2>Inicio</h2>\r\n            <p>Esta es la sección de inicio.</p>\r\n        </section>\r\n\r\n        <section id=\"about\" class=\"section-element\">\r\n            <h2>Acerca de</h2>\r\n            <p>Esta es la sección acerca de nosotros.</p>\r\n        </section>\r\n\r\n        <section id=\"contact\" class=\"section-element\">\r\n            <h2>Contacto</h2>\r\n            <p>Esta es la sección de contacto.</p>\r\n        </section>\r\n\r\n        <article class=\"card\">\r\n            <header>\r\n                <img src=\"https://dummyimage.com/250x250/000/fff&text=Perfil+de+Usuario\" alt=\"Perfil de Usuario\">\r\n            </header>\r\n            <section>\r\n                <h2>Juan Pérez</h2>\r\n                <p>Editor en jefe con más de 10 años de experiencia en la industria editorial.</p>\r\n            </section>\r\n            <footer>\r\n                <a href=\"#\">Ver más detalles</a>\r\n            </footer>\r\n        </article>\r\n    </main>\r\n\r\n    <footer id=\"main-footer-page\">\r\n        <p>&copy; 2025 - Mi Página Web</p>\r\n    </footer>\r\n</body>\r\n\r\n</html>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<html>\r",
                                "\r",
                                "<head>\r",
                                "    <title>Ejercicio HTML5 - Página Web</title>\r",
                                "    <style>\r",
                                "        @scope {\r",
                                "            main {\r",
                                "                font-family: Arial, sans-serif;\r",
                                "                margin: 0;\r",
                                "                padding: 0;\r",
                                "                background-color: #f9f9f9;\r",
                                "            }\r",
                                "\r",
                                "            header {\r",
                                "                background-color: #4CAF50;\r",
                                "                color: white;\r",
                                "                text-align: center;\r",
                                "                padding: 20px;\r",
                                "            }\r",
                                "\r",
                                "            nav ol {\r",
                                "                display: flex;\r",
                                "                justify-content: center;\r",
                                "                list-style: none;\r",
                                "            }\r",
                                "\r",
                                "            nav ol li {\r",
                                "                margin: 0 15px;\r",
                                "            }\r",
                                "\r",
                                "            nav ol li a {\r",
                                "                text-decoration: none;\r",
                                "                color: white;\r",
                                "                font-weight: bold;\r",
                                "            }\r",
                                "\r",
                                "            main {\r",
                                "                padding: 20px;\r",
                                "            }\r",
                                "\r",
                                "            section {\r",
                                "                color: black;\r",
                                "                padding: 15px;\r",
                                "            }\r",
                                "\r",
                                "            section.section-element {\r",
                                "                margin-bottom: 20px;\r",
                                "                background-color: #fff;\r",
                                "                border: 1px solid #ddd;\r",
                                "                border-radius: 8px;\r",
                                "            }\r",
                                "\r",
                                "            .card {\r",
                                "                background-color: #fff;\r",
                                "                border: 1px solid #ddd;\r",
                                "                border-radius: 8px;\r",
                                "                padding: 15px;\r",
                                "                max-width: 500px;\r",
                                "                margin: 20px auto;\r",
                                "                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r",
                                "            }\r",
                                "\r",
                                "            .card header img {\r",
                                "                border-radius: 50%;\r",
                                "                margin: 0 auto;\r",
                                "                display: block;\r",
                                "            }\r",
                                "\r",
                                "            .card header section {\r",
                                "                color: black;\r",
                                "            }\r",
                                "\r",
                                "            article.card footer a {\r",
                                "                margin-top: 10px;\r",
                                "                color: #4CAF50;\r",
                                "                text-decoration: none;\r",
                                "                font-weight: bold;\r",
                                "            }\r",
                                "\r",
                                "            article.card footer a:hover {\r",
                                "                color: #308332FF;\r",
                                "            }\r",
                                "\r",
                                "            footer#main-footer-page {\r",
                                "                text-align: center;\r",
                                "                background-color: #4CAF50;\r",
                                "                color: white;\r",
                                "                padding: 10px 0;\r",
                                "                width: 100%;\r",
                                "            }\r",
                                "        }\r",
                                "    </style>\r",
                                "</head>\r",
                                "\r",
                                "<body>\r",
                                "    <header>\r",
                                "        <h1>Bienvenido a Mi Página Web</h1>\r",
                                "        <nav>\r",
                                "            <ol>\r",
                                "                <li><a href=\"#home\">Inicio</a></li>\r",
                                "                <li><a href=\"#about\">Acerca de</a></li>\r",
                                "                <li><a href=\"#contact\">Contacto</a></li>\r",
                                "            </ol>\r",
                                "        </nav>\r",
                                "    </header>\r",
                                "\r",
                                "    <main>\r",
                                "        <section id=\"home\" class=\"section-element\">\r",
                                "            <h2>Inicio</h2>\r",
                                "            <p>Esta es la sección de inicio.</p>\r",
                                "        </section>\r",
                                "\r",
                                "        <section id=\"about\" class=\"section-element\">\r",
                                "            <h2>Acerca de</h2>\r",
                                "            <p>Esta es la sección acerca de nosotros.</p>\r",
                                "        </section>\r",
                                "\r",
                                "        <section id=\"contact\" class=\"section-element\">\r",
                                "            <h2>Contacto</h2>\r",
                                "            <p>Esta es la sección de contacto.</p>\r",
                                "        </section>\r",
                                "\r",
                                "        <article class=\"card\">\r",
                                "            <header>\r",
                                "                <img src=\"https://dummyimage.com/250x250/000/fff&text=Perfil+de+Usuario\" alt=\"Perfil de Usuario\">\r",
                                "            </header>\r",
                                "            <section>\r",
                                "                <h2>Juan Pérez</h2>\r",
                                "                <p>Editor en jefe con más de 10 años de experiencia en la industria editorial.</p>\r",
                                "            </section>\r",
                                "            <footer>\r",
                                "                <a href=\"#\">Ver más detalles</a>\r",
                                "            </footer>\r",
                                "        </article>\r",
                                "    </main>\r",
                                "\r",
                                "    <footer id=\"main-footer-page\">\r",
                                "        <p>&copy; 2025 - Mi Página Web</p>\r",
                                "    </footer>\r",
                                "</body>\r",
                                "\r",
                                "</html>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "#### Explicación de los estilos:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "1. **Estilo General:**\r\n   - La fuente y los márgenes se establecen en el `<body>`.\r\n   - El color de fondo de la página es un gris claro.\r\n\r\n2. **Encabezado:**\r\n   - Fondo verde y texto blanco.\r\n   - Navegación centrada con elementos distribuidos de manera uniforme.\r\n\r\n3. **Secciones:**\r\n   - Cada sección tiene un fondo blanco, bordes redondeados y margen inferior.\r\n\r\n4. **Tarjeta de Usuario:**\r\n   - Estilo con sombra y borde redondeado.\r\n   - Imagen de perfil centrada y circular.\r\n\r\n5. **Pie de Página:**\r\n   - Posicionado al final de la página, con un color de fondo verde y texto blanco.\r\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### Resultado esperado:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Al lanzar la página se verá bien estructurada y estilizada con secciones claras, un diseño de tarjeta atractivo y un pie de página al final."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### ¿Qué es el posicionamiento en CSS?"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "El posicionamiento en CSS define cómo se ubican los elementos en una página web, determinando su relación con otros elementos, su contenedor o la ventana del navegador. CSS ofrece varios tipos de posicionamiento para controlar la ubicación de los elementos."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/bdee391a1c33347997dc08a6445e2a34580927f9/image-2.png\" height=\"350px\"/>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/bdee391a1c33347997dc08a6445e2a34580927f9/image-3.png\" height=\"250px\"/>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### Tipos de Posicionamiento:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "1. **Posicionamiento Estático (`static`)**\r\n   - **Descripción:** Este es el valor por defecto para todos los elementos. Los elementos con `static` se posicionan de acuerdo con el flujo normal del documento y no responden a propiedades como `top`, `left`, `bottom` o `right`.\r\n   - **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .static-example {\r\n        width: 150px;\r\n        height: 50px;\r\n        background-color: lightgray;\r\n        color: black;\r\n        position: static;\r\n    }\r\n\r\n    .neighbor-example {\r\n        width: 150px;\r\n        height: 50px;\r\n        background-color: lightblue;\r\n        color: black;\r\n    }\r\n</style>\r\n<div style=\"border: solid red 2px; width: fit-content;\">\r\n    <div class=\"static-example\">Elemento Estático</div>\r\n    <div class=\"neighbor-example\">Elemento Vecino</div>\r\n    <div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .static-example {\r",
                                "        width: 150px;\r",
                                "        height: 50px;\r",
                                "        background-color: lightgray;\r",
                                "        color: black;\r",
                                "        position: static;\r",
                                "    }\r",
                                "\r",
                                "    .neighbor-example {\r",
                                "        width: 150px;\r",
                                "        height: 50px;\r",
                                "        background-color: lightblue;\r",
                                "        color: black;\r",
                                "    }\r",
                                "</style>\r",
                                "<div style=\"border: solid red 2px; width: fit-content;\">\r",
                                "    <div class=\"static-example\">Elemento Estático</div>\r",
                                "    <div class=\"neighbor-example\">Elemento Vecino</div>\r",
                                "<div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "Este ejemplo muestra cómo los elementos estáticos se colocan de manera secuencial."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "2. **Posicionamiento Relativo (`relative`)**\r\n   - **Descripción:** El elemento se posiciona relativo a su posición normal, desplazándose sin afectar el flujo de otros elementos.\r\n   - **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .container-1 {\r\n        border: solid red 2px;\r\n        width: fit-content;\r\n        height: fit-content;\r\n    }\r\n\r\n    .relative-example {\r\n        position: relative;\r\n        top: 20px;\r\n        left: 20px;\r\n        width: 150px;\r\n        height: 50px;\r\n        background-color: yellow;\r\n        color: black;\r\n    }\r\n\r\n    .neighbor-example {\r\n        width: 150px;\r\n        height: 50px;\r\n        background-color: lightblue;\r\n        color: black;\r\n    }\r\n</style>\r\n<div class=\"container-1\">\r\n    <div class=\"relative-example\">Elemento Relativo</div>\r\n    <hr>\r\n    <div class=\"neighbor-example\">Elemento Vecino</div>\r\n</div><br />\r\n\r\n\r\n<div class=\"container-1\">\r\n    <div class=\"neighbor-example\">Elemento Vecino</div>\r\n    <hr>\r\n    <div class=\"relative-example\">Elemento Relativo</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .container-1 {\r",
                                "        border: solid red 2px;\r",
                                "        width: fit-content;\r",
                                "        height: fit-content;\r",
                                "    }\r",
                                "\r",
                                "    .relative-example {\r",
                                "        position: relative;\r",
                                "        top: 20px;\r",
                                "        left: 20px;\r",
                                "        width: 150px;\r",
                                "        height: 50px;\r",
                                "        background-color: yellow;\r",
                                "        color: black;\r",
                                "    }\r",
                                "\r",
                                "    .neighbor-example {\r",
                                "        width: 150px;\r",
                                "        height: 50px;\r",
                                "        background-color: lightblue;\r",
                                "        color: black;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"container-1\">\r",
                                "    <div class=\"relative-example\">Elemento Relativo</div>\r",
                                "    <hr>\r",
                                "    <div class=\"neighbor-example\">Elemento Vecino</div>\r",
                                "</div><br />\r",
                                "\r",
                                "\r",
                                "<div class=\"container-1\">\r",
                                "    <div class=\"neighbor-example\">Elemento Vecino</div>\r",
                                "    <hr>\r",
                                "    <div class=\"relative-example\">Elemento Relativo</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "3. **Posicionamiento Absoluto (`absolute`)**\r\n   - **Descripción:** El elemento se posiciona relativo a su contenedor más cercano que no tenga posición `static`.\r\n   - **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .container-2 {\r\n        position: relative;\r\n        width: 200px;\r\n        height: 200px;\r\n        background-color: lightgray;\r\n        border: solid red 2px;\r\n        width: fit-content;\r\n        height: fit-content;\r\n    }\r\n\r\n    .absolute-example {\r\n        position: absolute;\r\n        top: 20px;\r\n        left: 20px;\r\n        width: 150px;\r\n        height: 50px;\r\n        background-color: orange;\r\n    }\r\n</style>\r\n\r\n<div class=\"container-2\">\r\n    <div class=\"neighbor-example\">Elemento Vecino</div>\r\n    <hr>\r\n    <div class=\"absolute-example\">Elemento Vecino</div>\r\n</div><br />\r\n\r\n\r\n<div class=\"container-2\">\r\n    <div class=\"absolute-example\">Elemento Relativo</div>\r\n    <hr>\r\n    <div class=\"neighbor-example\">Elemento Vecino</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .container-2 {\r",
                                "        position: relative;\r",
                                "        width: 200px;\r",
                                "        height: 200px;\r",
                                "        background-color: lightgray;\r",
                                "        border: solid red 2px;\r",
                                "        width: fit-content;\r",
                                "        height: fit-content;\r",
                                "    }\r",
                                "\r",
                                "    .absolute-example {\r",
                                "        position: absolute;\r",
                                "        top: 20px;\r",
                                "        left: 20px;\r",
                                "        width: 150px;\r",
                                "        height: 50px;\r",
                                "        background-color: orange;\r",
                                "    }\r",
                                "</style>\r",
                                "\r",
                                "<div class=\"container-2\">\r",
                                "    <div class=\"neighbor-example\">Elemento Vecino</div>\r",
                                "    <hr>\r",
                                "    <div class=\"absolute-example\">Elemento Vecino</div>\r",
                                "</div><br />\r",
                                "\r",
                                "\r",
                                "<div class=\"container-2\">\r",
                                "    <div class=\"absolute-example\">Elemento Relativo</div>\r",
                                "    <hr>\r",
                                "    <div class=\"neighbor-example\">Elemento Vecino</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "4. **Posicionamiento Fijo (`fixed`)**\r\n   - **Descripción:** El elemento se posiciona relativo a la ventana del navegador y permanece fijo al desplazarse.\r\n   - **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n  .container-3 {\r\n    position: relative;\r\n    width: 200px;\r\n    height: 200px;\r\n    background-color: lightgray;\r\n    border: solid red 2px;\r\n  }\r\n\r\n  .large-example {\r\n    width: 125px;\r\n    background-color: green;\r\n  }\r\n\r\n  .fixed-example {\r\n    position: fixed;\r\n    width: 150px;\r\n    height: 50px;\r\n    left: 20%;\r\n    background-color: blue;\r\n    color: white;\r\n    text-align: center;\r\n  }\r\n</style>\r\n<div class=\"container-3\">\r\n  <div class=\"fixed-example\">Elemento Fijo</div>\r\n  <div class=\"large-example\">\r\n    Elemento Largo 1\r\n    Elemento Largo 2\r\n    Elemento Largo 3\r\n    Elemento Largo 4\r\n    Elemento Largo 5\r\n    Elemento Largo 6\r\n    Elemento Largo 7\r\n    Elemento Largo 8\r\n    Elemento Largo 9\r\n    Elemento Largo 10\r\n    Elemento Largo 11\r\n    Elemento Largo 12\r\n    Elemento Largo 13\r\n    Elemento Largo 14\r\n    Elemento Largo 15\r\n  </div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "  .container-3 {\r",
                                "    position: relative;\r",
                                "    width: 200px;\r",
                                "    height: 200px;\r",
                                "    background-color: lightgray;\r",
                                "    border: solid red 2px;\r",
                                "  }\r",
                                "\r",
                                "  .large-example {\r",
                                "    width: 125px;\r",
                                "    background-color: green;\r",
                                "  }\r",
                                "\r",
                                "  .fixed-example {\r",
                                "    position: fixed;\r",
                                "    width: 150px;\r",
                                "    height: 50px;\r",
                                "    left: 20%;\r",
                                "    background-color: blue;\r",
                                "    color: white;\r",
                                "    text-align: center;\r",
                                "  }\r",
                                "</style>\r",
                                "<div class=\"container-3\">\r",
                                "  <div class=\"fixed-example\">Elemento Fijo</div>\r",
                                "  <div class=\"large-example\">\r",
                                "    Elemento Largo 1\r",
                                "    Elemento Largo 2\r",
                                "    Elemento Largo 3\r",
                                "    Elemento Largo 4\r",
                                "    Elemento Largo 5\r",
                                "    Elemento Largo 6\r",
                                "    Elemento Largo 7\r",
                                "    Elemento Largo 8\r",
                                "    Elemento Largo 9\r",
                                "    Elemento Largo 10\r",
                                "    Elemento Largo 11\r",
                                "    Elemento Largo 12\r",
                                "    Elemento Largo 13\r",
                                "    Elemento Largo 14\r",
                                "    Elemento Largo 15\r",
                                "  </div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "Este elemento permanece en parte superior derecha al hacer scroll."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "5. **Posicionamiento Sticky (`sticky`)**\r\n   - **Descripción:** El elemento se comporta como `relative` hasta alcanzar un punto en el scroll, luego actúa como `fixed`.\r\n   - **Ejemplo:**\r\n"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div style=\"position: relative; height: 400px; background-color: white;overflow: scroll;\">\r\n  <div class=\"content-4\" style=\"background-color: aquamarine;\">Relleno</div>\r\n  <div class=\"content-4\" style=\"background-color: darkseagreen;\">Relleno</div>\r\n  <div class=\"sticky-example\">Elemento Sticky</div>\r\n  <div class=\"content-4\" style=\"background-color: cyan;\">Relleno</div>\r\n  <div class=\"content-4\" style=\"background-color: azure;\">Relleno</div>\r\n  <div class=\"content-4\" style=\"background-color: blanchedalmond;\">Relleno</div>\r\n  <div class=\"content-4\" style=\"background-color: darkseagreen;\">Relleno</div>\r\n  <div class=\"content-4\" style=\"background-color: cornflowerblue;\">Relleno</div>\r\n  <div class=\"content-4\" style=\"background-color: antiquewhite;\">Relleno</div>\r\n  <div class=\"content-4\" style=\"background-color: darkcyan;\">Relleno</div>\r\n</div>\r\n<style>\r\n  .sticky-example {\r\n    position: sticky;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    background-color: black;\r\n    color: white;\r\n    text-align: center;\r\n    line-height: 50px;\r\n  }\r\n\r\n  .content-4 {\r\n    color: black;\r\n    height: 100px;\r\n  }\r\n</style>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div style=\"position: relative; height: 400px; background-color: white;overflow: scroll;\">\r",
                                "  <div class=\"content-4\" style=\"background-color: aquamarine;\">Relleno</div>\r",
                                "  <div class=\"content-4\" style=\"background-color: darkseagreen;\">Relleno</div>\r",
                                "  <div class=\"sticky-example\">Elemento Sticky</div>\r",
                                "  <div class=\"content-4\" style=\"background-color: cyan;\">Relleno</div>\r",
                                "  <div class=\"content-4\" style=\"background-color: azure;\">Relleno</div>\r",
                                "  <div class=\"content-4\" style=\"background-color: blanchedalmond;\">Relleno</div>\r",
                                "  <div class=\"content-4\" style=\"background-color: darkseagreen;\">Relleno</div>\r",
                                "  <div class=\"content-4\" style=\"background-color: cornflowerblue;\">Relleno</div>\r",
                                "  <div class=\"content-4\" style=\"background-color: antiquewhite;\">Relleno</div>\r",
                                "  <div class=\"content-4\" style=\"background-color: darkcyan;\">Relleno</div>\r",
                                "</div>\r",
                                "<style>\r",
                                "  .sticky-example {\r",
                                "    position: sticky;\r",
                                "    top: 0;\r",
                                "    width: 100%;\r",
                                "    height: 50px;\r",
                                "    font-size: 20px;\r",
                                "    font-weight: bold;\r",
                                "    background-color: black;\r",
                                "    color: white;\r",
                                "    text-align: center;\r",
                                "    line-height: 50px;\r",
                                "  }\r",
                                "\r",
                                "  .content-4 {\r",
                                "    color: black;\r",
                                "    height: 100px;\r",
                                "  }\r",
                                "</style>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "Este elemento permanece en la parte superior al hacer scroll hasta alcanzar el final de su contenedor."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Introducción a la propiedad `display` en CSS"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "La propiedad `display` en CSS controla cómo se muestran los elementos en una página web. Define el modelo de caja utilizado para renderizar un elemento y afecta su comportamiento en el diseño.\r\n\r\n**Valores comunes de `display`:**\r\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "1. **`block`**\r\n   - Los elementos ocupan todo el ancho disponible y comienzan en una nueva línea.\r\n   - Ejemplo:"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div style=\"display: block; background: lightblue; padding: 10px;\">Soy un elemento block</div>\r\n<div style=\"display: block; background: lightgreen; padding: 10px;\">Otro elemento block</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div style=\"display: block; background: lightblue; padding: 10px;\">Soy un elemento block</div>\r",
                                "<div style=\"display: block; background: lightgreen; padding: 10px;\">Otro elemento block</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "2. **`inline`**\r\n   - Los elementos solo ocupan el espacio necesario y no inician en una nueva línea.\r\n   - Ejemplo:"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<span style=\"display: inline; background: lightcoral; padding: 10px;\">Soy un elemento inline</span>\r\n<span style=\"display: inline; background: lightyellow; padding: 10px;\">Otro elemento inline</span>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<span style=\"display: inline; background: lightcoral; padding: 10px;\">Soy un elemento inline</span>\r",
                                "<span style=\"display: inline; background: lightyellow; padding: 10px;\">Otro elemento inline</span>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "3. **`inline-block`**\r\n   - Similar a `inline`, pero permite aplicar márgenes y paddings.\r\n   - Ejemplo:"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div style=\"display: inline-block; background: lightpink; padding: 10px; margin-right: 10px;\">Soy inline-block</div>\r\n<div style=\"display: inline-block; background: lightgray; padding: 10px;\">Otro inline-block</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div style=\"display: inline-block; background: lightpink; padding: 10px; margin-right: 10px;\">Soy inline-block</div>\r",
                                "<div style=\"display: inline-block; background: lightgray; padding: 10px;\">Otro inline-block</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "4. **`flex`**\r\n   - Convierte un contenedor en flexbox, permitiendo la distribución flexible de los elementos hijos.\r\n   - Ejemplo:"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div style=\"display: flex; justify-content: space-around; background: lightblue; padding: 10px;\">\r\n  <div style=\"padding: 20px; background: coral;\">Elemento 1</div>\r\n  <div style=\"padding: 20px; background: lightgreen;\">Elemento 2</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div style=\"display: flex; justify-content: space-around; background: lightblue; padding: 10px;\">\r",
                                "    <div style=\"padding: 20px; background: coral;\">Elemento 1</div>\r",
                                "    <div style=\"padding: 20px; background: lightgreen;\">Elemento 2</div>\r",
                                "  </div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "5. **`grid`**\r\n   - Convierte un contenedor en una cuadrícula flexible de filas y columnas.\r\n   - Ejemplo:"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 10px; background: lightblue;\">\r\n    <div style=\"padding: 20px; background: coral;\">Elemento 1</div>\r\n    <div style=\"padding: 20px; background: lightgreen;\">Elemento 2</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 10px; background: lightblue;\">\r",
                                "    <div style=\"padding: 20px; background: coral;\">Elemento 1</div>\r",
                                "    <div style=\"padding: 20px; background: lightgreen;\">Elemento 2</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "6. **`none`**\r\n   - Oculta el elemento, sin ocupar espacio en el diseño.\r\n   - Ejemplo:"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<div style=\"display: none;\">Este elemento está oculto</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<div style=\"display: none;\">Este elemento está oculto</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "Cada valor de `display` tiene un impacto significativo en el flujo de la página y en la manera en la que los elementos se distribuyen y interactúan entre sí."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Introducción a Flexbox en CSS"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Flexbox es un modelo de diseño de CSS que permite distribuir el espacio entre los elementos de una manera eficiente y flexible dentro de un contenedor, incluso si su tamaño es dinámico o desconocido."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### Propiedades principales de Flexbox"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### 1. **`display: flex;`**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- Convierte un contenedor en un contenedor flex, permitiendo que sus elementos secundarios se distribuyan utilizando el modelo de flexbox."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### 2. **`flex-direction`**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "  - Define la dirección de los elementos dentro del contenedor a los largo del eje principal y trasversal.\r\n\r\n    - **Eje principal (main axis):** Es la dirección en la que los elementos se alinean dentro del contenedor flex, determinada por la propiedad `flex-direction`.\r\n    - **Eje transversal (cross axis):** Es trasversal al eje principal y controla la alineación en esa dirección, utilizada en la propiedad `align-items`."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<center><img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/e9d4eedc4f39527e4f8b8f768c96149281d1ffcb/image-4-flex.png\" height=\"290\"/></center>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Ejemplos:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .flex-container {\r\n        display: flex;\r\n        border: 2px solid white;\r\n        padding: 10px;\r\n        margin-bottom: 20px;\r\n        color: black;\r\n    }\r\n\r\n    .flex-item {\r\n        background-color: lightblue;\r\n        padding: 20px;\r\n        border: 1px solid blue;\r\n        text-align: center;\r\n        width: 100px;\r\n    }\r\n\r\n    .flex-item:nth-child(1) {\r\n        background-color: lightblue;\r\n    }\r\n\r\n    .flex-item:nth-child(2) {\r\n        background-color: lightgreen;\r\n    }\r\n\r\n    .flex-item:nth-child(3) {\r\n        background-color: lightcoral;\r\n    }\r\n</style>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .flex-container {\r",
                                "        display: flex;\r",
                                "        border: 2px solid white;\r",
                                "        padding: 10px;\r",
                                "        margin-bottom: 20px;\r",
                                "        color: black;\r",
                                "    }\r",
                                "\r",
                                "    .flex-item {\r",
                                "        background-color: lightblue;\r",
                                "        padding: 20px;\r",
                                "        border: 1px solid blue;\r",
                                "        text-align: center;\r",
                                "        width: 100px;\r",
                                "    }\r",
                                "\r",
                                "    .flex-item:nth-child(1) {\r",
                                "        background-color: lightblue;\r",
                                "    }\r",
                                "\r",
                                "    .flex-item:nth-child(2) {\r",
                                "        background-color: lightgreen;\r",
                                "    }\r",
                                "\r",
                                "    .flex-item:nth-child(3) {\r",
                                "        background-color: lightcoral;\r",
                                "    }\r",
                                "</style>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**Valores comunes:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "\r\n- `row` (predeterminado): Los elementos se alinean horizontalmente a lo largo del eje principal (de izquierda a derecha)."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .row {\r\n        flex-direction: row;\r\n    }\r\n</style>\r\n<label>flex-direction: row</label>\r\n<hr />\r\n<div class=\"flex-container row\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .row {\r",
                                "        flex-direction: row;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>flex-direction: row</label>\r",
                                "<hr />\r",
                                "<div class=\"flex-container row\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `row-reverse`: Invierte el orden de los elementos en una fila, alineándolos de derecha a izquierda en el eje principal."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .row-reverse {\r\n        flex-direction: row-reverse;\r\n    }\r\n</style>\r\n<label>flex-direction: row-reverse</label>\r\n<hr />\r\n<div class=\"flex-container row-reverse\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .row-reverse {\r",
                                "        flex-direction: row-reverse;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>flex-direction: row-reverse</label>\r",
                                "<hr />\r",
                                "<div class=\"flex-container row-reverse\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `column`: Los elementos se alinean verticalmente a lo largo del eje principal (de arriba a abajo)."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .column {\r\n        flex-direction: column;\r\n    }\r\n</style>\r\n<label>flex-direction: column</label>\r\n<hr />\r\n<div class=\"flex-container column\">\r\n    <div class=\"flex-item\">A</div>\r\n    <div class=\"flex-item\">B</div>\r\n    <div class=\"flex-item\">C</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .column {\r",
                                "        flex-direction: column;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>flex-direction: column</label>\r",
                                "<hr />\r",
                                "<div class=\"flex-container column\">\r",
                                "    <div class=\"flex-item\">A</div>\r",
                                "    <div class=\"flex-item\">B</div>\r",
                                "    <div class=\"flex-item\">C</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `column-reverse`: Invierte el orden de los elementos en una columna, alineándolos de abajo a arriba en el eje principal."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .column-reverse {\r\n        flex-direction: column-reverse;\r\n    }\r\n</style>\r\n<label>flex-direction: column-reverse</label>\r\n<hr />\r\n<div class=\"flex-container column-reverse\">\r\n    <div class=\"flex-item\">A</div>\r\n    <div class=\"flex-item\">B</div>\r\n    <div class=\"flex-item\">C</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .column-reverse {\r",
                                "        flex-direction: column-reverse;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>flex-direction: column-reverse</label>\r",
                                "<hr />\r",
                                "<div class=\"flex-container column-reverse\">\r",
                                "    <div class=\"flex-item\">A</div>\r",
                                "    <div class=\"flex-item\">B</div>\r",
                                "    <div class=\"flex-item\">C</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "##### 3. **`justify-content`**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- Controla la alineación de los elementos a lo largo del eje principal.\r\n\r\n- **Valores comunes:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "  - `flex-start`: Alinea los elementos al inicio del contenedor."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .justify-content .flex-start {\r\n        justify-content: flex-start;\r\n    }\r\n</style>\r\n<div class=\"justify-content flex-container flex-start\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .justify-content .flex-start {\r",
                                "        justify-content: flex-start;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"justify-content flex-container flex-start\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `flex-end`: Alinea los elementos al final del contenedor."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .justify-content.flex-end {\r\n        justify-content: flex-end;\r\n    }\r\n</style>\r\n<div class=\"justify-content flex-container flex-end\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .justify-content.flex-end {\r",
                                "        justify-content: flex-end;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"justify-content flex-container flex-end\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `center`: Centra los elementos."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .justify-content.center {\r\n        justify-content: center;\r\n    }\r\n</style>\r\n<div class=\"justify-content flex-container center\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .justify-content.center {\r",
                                "        justify-content: center;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"justify-content flex-container center\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `space-between`: Distribuye los elementos uniformemente dejando espacio entre ellos."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .justify-content.space-between {\r\n        justify-content: space-between;\r\n    }\r\n</style>\r\n<div class=\"justify-content flex-container space-between\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .justify-content.space-between {\r",
                                "        justify-content: space-between;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"justify-content flex-container space-between\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "  - `space-around`: Distribuye los elementos con espacio antes, entre y después de los elementos."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .justify-content.space-around {\r\n        justify-content: space-around;\r\n    }\r\n</style>\r\n<div class=\"justify-content flex-container space-around\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .justify-content.space-around {\r",
                                "        justify-content: space-around;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"justify-content flex-container space-around\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "  - `space-evenly`: Distribuye los elementos con espacio igual entre ellos y en los extremos."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .justify-content.space-evenly {\r\n        justify-content: space-evenly;\r\n    }\r\n</style>\r\n<div class=\"justify-content flex-container space-evenly\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .justify-content.space-evenly {\r",
                                "        justify-content: space-evenly;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"justify-content flex-container space-evenly\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "##### 4. **`align-items`**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "   - Controla la alineación de los elementos a lo largo del eje transversal.\r\n\r\n   - **Valores comunes:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-items.flex-container {\r\n        height: 200px;\r\n    }\r\n</style>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-items.flex-container {\r",
                                "        height: 200px;\r",
                                "    }\r",
                                "</style>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `flex-start`: Alinea los elementos al inicio."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-items.align-start {\r\n        align-items: flex-start;\r\n    }\r\n</style>\r\n<label>align-items: flex-start</label>\r\n<hr />\r\n<div class=\"align-items flex-container align-start\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-items.align-start {\r",
                                "        align-items: flex-start;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>align-items: flex-start</label>\r",
                                "<hr />\r",
                                "<div class=\"align-items flex-container align-start\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `flex-end`: Alinea los elementos al final."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-items.align-end {\r\n        align-items: flex-end;\r\n    }\r\n</style>\r\n<label>align-items: flex-end</label>\r\n<hr />\r\n<div class=\"align-items flex-container align-end\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-items.align-end {\r",
                                "        align-items: flex-end;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>align-items: flex-end</label>\r",
                                "<hr />\r",
                                "<div class=\"align-items flex-container align-end\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `stretch` (predeterminado): Los elementos se estiran para llenar el contenedor."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-items.align-stretch {\r\n        align-items: stretch;\r\n    }\r\n</style>\r\n<label>align-items: stretch</label>\r\n<hr />\r\n<div class=\"align-items flex-container align-stretch\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-items.align-stretch {\r",
                                "        align-items: stretch;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>align-items: stretch</label>\r",
                                "<hr />\r",
                                "<div class=\"align-items flex-container align-stretch\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                " - `baseline`: Alinea los elementos según su línea de base del texto."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "![](https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/3b9630a7f76a6a62496bf4b52498c234eefe6d3d/image-5-baseline.png)"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-items.align-baseline {\r\n        align-items: baseline;\r\n    }\r\n\r\n    .baseline-indicator {\r\n        background-color: red;\r\n        width: 100%;\r\n        height: 1px;\r\n        position: absolute;\r\n        top: 83px;\r\n    }\r\n\r\n    .texto-largo {\r\n        font-size: 45px;\r\n        width: 300px;\r\n        text-decoration: underline;\r\n    }\r\n\r\n    .texto-medio {\r\n        font-size: 24px;\r\n        width: 150px;\r\n        text-decoration: underline;\r\n    }\r\n\r\n    .texto-corto {\r\n        text-decoration: underline;\r\n    }\r\n</style>\r\n<label>align-items: baseline</label>\r\n<hr />\r\n<div style=\"position: relative;\">\r\n    <div class=\"align-items flex-container align-baseline\">\r\n        <div class=\"flex-item texto-corto\">Texto corto</div>\r\n        <div class=\"flex-item texto-largo\">Texto grande</div>\r\n        <div class=\"flex-item texto-medio\">Texto medio</div>\r\n    </div>\r\n    <span class=\"baseline-indicator\"></span>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-items.align-baseline {\r",
                                "        align-items: baseline;\r",
                                "    }\r",
                                "\r",
                                "    .baseline-indicator {\r",
                                "        background-color: red;\r",
                                "        width: 100%;\r",
                                "        height: 1px;\r",
                                "        position: absolute;\r",
                                "        top: 83px;\r",
                                "    }\r",
                                "\r",
                                "    .texto-largo {\r",
                                "        font-size: 45px;\r",
                                "        width: 300px;\r",
                                "        text-decoration: underline;\r",
                                "    }\r",
                                "\r",
                                "    .texto-medio {\r",
                                "        font-size: 24px;\r",
                                "        width: 150px;\r",
                                "        text-decoration: underline;\r",
                                "    }\r",
                                "\r",
                                "    .texto-corto {\r",
                                "        text-decoration: underline;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>align-items: baseline</label>\r",
                                "<hr />\r",
                                "<div style=\"position: relative;\">\r",
                                "    <div class=\"align-items flex-container align-baseline\">\r",
                                "        <div class=\"flex-item texto-corto\">Texto corto</div>\r",
                                "        <div class=\"flex-item texto-largo\">Texto grande</div>\r",
                                "        <div class=\"flex-item texto-medio\">Texto medio</div>\r",
                                "    </div>\r",
                                "    <span class=\"baseline-indicator\"></span>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "##### 5. **`flex-wrap`**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "   - Controla si los elementos deben ajustarse a una nueva línea si no caben en el contenedor.\r\n   \r\n   - **Valores comunes:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .flex-item:nth-child(4) {\r\n        background-color: aqua;\r\n    }\r\n\r\n    .flex-item:nth-child(5) {\r\n        background-color: aquamarine;\r\n    }\r\n\r\n    .flex-item:nth-child(6) {\r\n        background-color: cadetblue;\r\n    }\r\n\r\n    .flex-item:nth-child(7) {\r\n        background-color: darkkhaki;\r\n    }\r\n\r\n    .flex-item:nth-child(8) {\r\n        background-color: darksalmon;\r\n    }\r\n\r\n    .flex-item:nth-child(9) {\r\n        background-color: deepskyblue;\r\n    }\r\n</style>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .flex-item:nth-child(4) {\r",
                                "        background-color: aqua;\r",
                                "    }\r",
                                "\r",
                                "    .flex-item:nth-child(5) {\r",
                                "        background-color: aquamarine;\r",
                                "    }\r",
                                "\r",
                                "    .flex-item:nth-child(6) {\r",
                                "        background-color: cadetblue;\r",
                                "    }\r",
                                "\r",
                                "    .flex-item:nth-child(7) {\r",
                                "        background-color: darkkhaki;\r",
                                "    }\r",
                                "\r",
                                "    .flex-item:nth-child(8) {\r",
                                "        background-color: darksalmon;\r",
                                "    }\r",
                                "\r",
                                "    .flex-item:nth-child(9) {\r",
                                "        background-color: deepskyblue;\r",
                                "    }\r",
                                "</style>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **nowrap (predeterminado):** Todos los elementos se mantienen en una sola línea."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .flex-wrap.nowrap {\r\n        flex-wrap: nowrap;\r\n    }\r\n</style>\r\n<label>flex-wrap: nowrap</label>\r\n<hr />\r\n<div class=\"flex-wrap flex-container nowrap\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n    <div class=\"flex-item\">4</div>\r\n    <div class=\"flex-item\">5</div>\r\n    <div class=\"flex-item\">6</div>\r\n    <div class=\"flex-item\">7</div>\r\n    <div class=\"flex-item\">8</div>\r\n    <div class=\"flex-item\">9</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .flex-wrap.nowrap {\r",
                                "        flex-wrap: nowrap;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>flex-wrap: nowrap</label>\r",
                                "<hr />\r",
                                "<div class=\"flex-wrap flex-container nowrap\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">4</div>\r",
                                "    <div class=\"flex-item\">5</div>\r",
                                "    <div class=\"flex-item\">6</div>\r",
                                "    <div class=\"flex-item\">7</div>\r",
                                "    <div class=\"flex-item\">8</div>\r",
                                "    <div class=\"flex-item\">9</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **wrap:** Los elementos se ajustan en múltiples líneas."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n  .flex-wrap.wrap {\r\n    flex-wrap: wrap;\r\n  }\r\n</style>\r\n<label>flex-wrap: wrap</label>\r\n<hr />\r\n<div class=\"flex-wrap flex-container wrap\">\r\n  <div class=\"flex-item\">1</div>\r\n  <div class=\"flex-item\">2</div>\r\n  <div class=\"flex-item\">3</div>\r\n  <div class=\"flex-item\">4</div>\r\n  <div class=\"flex-item\">5</div>\r\n  <div class=\"flex-item\">6</div>\r\n  <div class=\"flex-item\">7</div>\r\n  <div class=\"flex-item\">8</div>\r\n  <div class=\"flex-item\">9</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "  .flex-wrap.wrap {\r",
                                "    flex-wrap: wrap;\r",
                                "  }\r",
                                "</style>\r",
                                "<label>flex-wrap: wrap</label>\r",
                                "<hr />\r",
                                "<div class=\"flex-wrap flex-container wrap\">\r",
                                "  <div class=\"flex-item\">1</div>\r",
                                "  <div class=\"flex-item\">2</div>\r",
                                "  <div class=\"flex-item\">3</div>\r",
                                "  <div class=\"flex-item\">4</div>\r",
                                "  <div class=\"flex-item\">5</div>\r",
                                "  <div class=\"flex-item\">6</div>\r",
                                "  <div class=\"flex-item\">7</div>\r",
                                "  <div class=\"flex-item\">8</div>\r",
                                "  <div class=\"flex-item\">9</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **wrap-reverse:** Los elementos se ajustan en múltiples líneas en orden inverso."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n  .flex-wrap.wrap-reverse {\r\n    flex-wrap: wrap-reverse;\r\n  }\r\n</style>\r\n<label>flex-wrap: wrap-reverse</label>\r\n<hr />\r\n<div class=\"flex-wrap flex-container wrap-reverse\">\r\n  <div class=\"flex-item\">1</div>\r\n  <div class=\"flex-item\">2</div>\r\n  <div class=\"flex-item\">3</div>\r\n  <div class=\"flex-item\">4</div>\r\n  <div class=\"flex-item\">5</div>\r\n  <div class=\"flex-item\">6</div>\r\n  <div class=\"flex-item\">7</div>\r\n  <div class=\"flex-item\">8</div>\r\n  <div class=\"flex-item\">9</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "  .flex-wrap.wrap-reverse {\r",
                                "    flex-wrap: wrap-reverse;\r",
                                "  }\r",
                                "</style>\r",
                                "<label>flex-wrap: wrap-reverse</label>\r",
                                "<hr />\r",
                                "<div class=\"flex-wrap flex-container wrap-reverse\">\r",
                                "  <div class=\"flex-item\">1</div>\r",
                                "  <div class=\"flex-item\">2</div>\r",
                                "  <div class=\"flex-item\">3</div>\r",
                                "  <div class=\"flex-item\">4</div>\r",
                                "  <div class=\"flex-item\">5</div>\r",
                                "  <div class=\"flex-item\">6</div>\r",
                                "  <div class=\"flex-item\">7</div>\r",
                                "  <div class=\"flex-item\">8</div>\r",
                                "  <div class=\"flex-item\">9</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "##### 6. **`align-content`**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "   - Controla la alineación de las líneas de elementos cuando hay múltiples líneas en el contenedor.\r\n   \r\n   - **Valores comunes**:"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-content {\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    .align-content.flex-container {\r\n        height: 300px;\r\n    }\r\n</style>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-content {\r",
                                "        flex-wrap: wrap;\r",
                                "    }\r",
                                "\r",
                                "    .align-content.flex-container {\r",
                                "        height: 300px;\r",
                                "    }\r",
                                "</style>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `flex-start`: Alinea las líneas en la parte superior."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-content.align-content-start {\r\n        align-content: flex-start;\r\n        flex-wrap: wrap;\r\n    }\r\n</style>\r\n<label>align-content: flex-start</label>\r\n<div class=\"align-content flex-container align-content-start\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n    <div class=\"flex-item\">4</div>\r\n    <div class=\"flex-item\">5</div>\r\n    <div class=\"flex-item\">6</div>\r\n    <div class=\"flex-item\">7</div>\r\n    <div class=\"flex-item\">8</div>\r\n    <div class=\"flex-item\">9</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-content.align-content-start {\r",
                                "        align-content: flex-start;\r",
                                "        flex-wrap: wrap;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>align-content: flex-start</label>\r",
                                "<div class=\"align-content flex-container align-content-start\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">4</div>\r",
                                "    <div class=\"flex-item\">5</div>\r",
                                "    <div class=\"flex-item\">6</div>\r",
                                "    <div class=\"flex-item\">7</div>\r",
                                "    <div class=\"flex-item\">8</div>\r",
                                "    <div class=\"flex-item\">9</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `flex-end`: Alinea las líneas en la parte inferior."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-content.align-content-end {\r\n        align-content: flex-end;\r\n    }\r\n</style>\r\n<label>align-content: flex-end</label>\r\n<div class=\"align-content flex-container align-content-end\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n    <div class=\"flex-item\">4</div>\r\n    <div class=\"flex-item\">5</div>\r\n    <div class=\"flex-item\">6</div>\r\n    <div class=\"flex-item\">7</div>\r\n    <div class=\"flex-item\">8</div>\r\n    <div class=\"flex-item\">9</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-content.align-content-end {\r",
                                "        align-content: flex-end;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>align-content: flex-end</label>\r",
                                "<div class=\"align-content flex-container align-content-end\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">4</div>\r",
                                "    <div class=\"flex-item\">5</div>\r",
                                "    <div class=\"flex-item\">6</div>\r",
                                "    <div class=\"flex-item\">7</div>\r",
                                "    <div class=\"flex-item\">8</div>\r",
                                "    <div class=\"flex-item\">9</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `center`: Alinea las líneas en el centro del contenedor."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-content.align-content-center {\r\n        align-content: center;\r\n    }\r\n</style>\r\n<label>align-content: center</label>\r\n<div class=\"align-content flex-container align-content-center\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n    <div class=\"flex-item\">4</div>\r\n    <div class=\"flex-item\">5</div>\r\n    <div class=\"flex-item\">6</div>\r\n    <div class=\"flex-item\">7</div>\r\n    <div class=\"flex-item\">8</div>\r\n    <div class=\"flex-item\">9</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-content.align-content-center {\r",
                                "        align-content: center;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>align-content: center</label>\r",
                                "<div class=\"align-content flex-container align-content-center\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">4</div>\r",
                                "    <div class=\"flex-item\">5</div>\r",
                                "    <div class=\"flex-item\">6</div>\r",
                                "    <div class=\"flex-item\">7</div>\r",
                                "    <div class=\"flex-item\">8</div>\r",
                                "    <div class=\"flex-item\">9</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `stretch`: Las líneas se estiran para llenar el contenedor."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-content.align-content-stretch {\r\n        align-content: stretch;\r\n    }\r\n</style>\r\n<label>align-content: stretch</label>\r\n<div class=\"align-content flex-container align-content-stretch\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n    <div class=\"flex-item\">4</div>\r\n    <div class=\"flex-item\">5</div>\r\n    <div class=\"flex-item\">6</div>\r\n    <div class=\"flex-item\">7</div>\r\n    <div class=\"flex-item\">8</div>\r\n    <div class=\"flex-item\">9</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-content.align-content-stretch {\r",
                                "        align-content: stretch;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>align-content: stretch</label>\r",
                                "<div class=\"align-content flex-container align-content-stretch\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">4</div>\r",
                                "    <div class=\"flex-item\">5</div>\r",
                                "    <div class=\"flex-item\">6</div>\r",
                                "    <div class=\"flex-item\">7</div>\r",
                                "    <div class=\"flex-item\">8</div>\r",
                                "    <div class=\"flex-item\">9</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `space-between`: Distribuye las líneas uniformemente."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-content.align-content-space-between {\r\n        align-content: space-between;\r\n    }\r\n</style>\r\n<label>align-content: space-between</label>\r\n<div class=\"align-content flex-container align-content-space-between\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n    <div class=\"flex-item\">4</div>\r\n    <div class=\"flex-item\">5</div>\r\n    <div class=\"flex-item\">6</div>\r\n    <div class=\"flex-item\">7</div>\r\n    <div class=\"flex-item\">8</div>\r\n    <div class=\"flex-item\">9</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-content.align-content-space-between {\r",
                                "        align-content: space-between;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>align-content: space-between</label>\r",
                                "<div class=\"align-content flex-container align-content-space-between\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">4</div>\r",
                                "    <div class=\"flex-item\">5</div>\r",
                                "    <div class=\"flex-item\">6</div>\r",
                                "    <div class=\"flex-item\">7</div>\r",
                                "    <div class=\"flex-item\">8</div>\r",
                                "    <div class=\"flex-item\">9</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `space-around`: Distribuye las líneas con espacio antes, entre y después."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-content.align-content-space-around {\r\n        align-content: space-around;\r\n    }\r\n</style>\r\n<label>align-content: space-around</label>\r\n<div class=\"align-content flex-container align-content-space-around\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n    <div class=\"flex-item\">4</div>\r\n    <div class=\"flex-item\">5</div>\r\n    <div class=\"flex-item\">6</div>\r\n    <div class=\"flex-item\">7</div>\r\n    <div class=\"flex-item\">8</div>\r\n    <div class=\"flex-item\">9</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-content.align-content-space-around {\r",
                                "        align-content: space-around;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>align-content: space-around</label>\r",
                                "<div class=\"align-content flex-container align-content-space-around\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">4</div>\r",
                                "    <div class=\"flex-item\">5</div>\r",
                                "    <div class=\"flex-item\">6</div>\r",
                                "    <div class=\"flex-item\">7</div>\r",
                                "    <div class=\"flex-item\">8</div>\r",
                                "    <div class=\"flex-item\">9</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **space-evenly:** Distribuye las líneas con espacios iguales entre ellas y los bordes del contenedor."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .align-content.align-content-space-evenly {\r\n        align-content: space-evenly;\r\n    }\r\n</style>\r\n<label>align-content: space-around</label>\r\n<div class=\"align-content flex-container align-content-space-evenly\">\r\n    <div class=\"flex-item\">1</div>\r\n    <div class=\"flex-item\">2</div>\r\n    <div class=\"flex-item\">3</div>\r\n    <div class=\"flex-item\">4</div>\r\n    <div class=\"flex-item\">5</div>\r\n    <div class=\"flex-item\">6</div>\r\n    <div class=\"flex-item\">7</div>\r\n    <div class=\"flex-item\">8</div>\r\n    <div class=\"flex-item\">9</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .align-content.align-content-space-evenly {\r",
                                "        align-content: space-evenly;\r",
                                "    }\r",
                                "</style>\r",
                                "<label>align-content: space-around</label>\r",
                                "<div class=\"align-content flex-container align-content-space-evenly\">\r",
                                "    <div class=\"flex-item\">1</div>\r",
                                "    <div class=\"flex-item\">2</div>\r",
                                "    <div class=\"flex-item\">3</div>\r",
                                "    <div class=\"flex-item\">4</div>\r",
                                "    <div class=\"flex-item\">5</div>\r",
                                "    <div class=\"flex-item\">6</div>\r",
                                "    <div class=\"flex-item\">7</div>\r",
                                "    <div class=\"flex-item\">8</div>\r",
                                "    <div class=\"flex-item\">9</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "#### Ejercicio Práctico: Galería de Tarjetas con Flexbox"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Objetivo:**\r\nPracticar las propiedades `flex-direction`, `justify-content`, `align-items`, `flex-wrap` y `align-content` creando una galería de tarjetas adaptable con imágenes y etiquetas centradas.\r\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Instrucciones:**\r\n1. Cambia `flex-direction` a `column` y observa cómo se reorganizan las tarjetas.\r\n2. Modifica `justify-content` a `center` y analiza la alineación de las tarjetas.\r\n3. Prueba `align-items: flex-start` para ver su efecto en el eje transversal.\r\n4. Cambia `flex-wrap` a `nowrap` y nota la diferencia.\r\n5. Experimenta con diferentes valores de `align-content` como `space-between` o `center`."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**HTML:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<!-- HTML Aqui-->\r\n<label>Galeria de Tarjetas</label>\r\n<div class=\"card-gallery\">\r\n    <div class=\"card\">\r\n        <img src=\"https://placehold.co/150\" />\r\n        <p>Imagen 1</p>\r\n    </div>\r\n    <div class=\"card\">\r\n        <img src=\"https://placehold.co/150\" />\r\n        <p>Imagen 2</p>\r\n    </div>\r\n    <div class=\"card\">\r\n        <img src=\"https://placehold.co/150\" />\r\n        <p>Imagen 3</p>\r\n    </div>\r\n    <div class=\"card\">\r\n        <img src=\"https://placehold.co/150\" />\r\n        <p>Imagen 4</p>\r\n    </div>\r\n    <div class=\"card\">\r\n        <img src=\"https://placehold.co/150\" />\r\n        <p>Imagen 5</p>\r\n    </div>\r\n    <div class=\"card\">\r\n        <img src=\"https://placehold.co/150\" />\r\n        <p>Imagen 6</p>\r\n    </div>\r\n    <div class=\"card\">\r\n        <img src=\"https://placehold.co/150\" />\r\n        <p>Imagen 7</p>\r\n    </div>\r\n    <div class=\"card\">\r\n        <img src=\"https://placehold.co/150\" />\r\n        <p>Imagen 8</p>\r\n    </div>\r\n    <div class=\"card\">\r\n        <img src=\"https://placehold.co/150\" />\r\n        <p>Imagen 9</p>\r\n    </div>\r\n    <div class=\"card\">\r\n        <img src=\"https://placehold.co/150\" />\r\n        <p>Imagen 10</p>\r\n    </div>\r\n</div>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**CSS:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<!-- CSS aqui -->\r\n<style>\r\n    .card-gallery {\r\n        display: flex;\r\n        height: 900px;\r\n        border: solid 1px white;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        gap: 5%;\r\n        padding: 20px;\r\n        justify-content: flex-start;\r\n        align-items: flex-start;\r\n        align-content: flex-start;\r\n        background-color: #fff;\r\n    }\r\n\r\n    .card {\r\n        width: 180px;\r\n        background-color: white;\r\n        border: solid 1px black;\r\n        text-align: center;\r\n        padding: 10px;\r\n        border-radius: 8px;\r\n        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .card img {\r\n        width: 100%;\r\n        height: auto;\r\n        border-top-left-radius: 8px;\r\n        border-top-right-radius: 8px;\r\n    }\r\n\r\n    .card p {\r\n        color: black;\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n    }\r\n</style>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Introducción al Diseño Web Responsivo"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**¿Qué es el diseño web responsivo?**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "El diseño web responsivo es una técnica que permite que una página web se adapte automáticamente a diferentes tamaños de pantalla y dispositivos, como computadoras de escritorio, tabletas y teléfonos móviles. Esto se logra utilizando `media queries`, unidades flexibles y un diseño fluido."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Principios básicos del diseño responsivo:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "1. **Fluidez:** El contenido debe redimensionarse de manera flexible para adaptarse a diferentes pantallas.\r\n\r\n    **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .contenedor-fluido {\r\n        width: 60%;\r\n        margin: auto;\r\n        padding: 20px;\r\n        background-color: lightblue;\r\n        text-align: center;\r\n    }\r\n</style>\r\n<div style=\"border: solid 1px white;\">\r\n    <div class=\"contenedor-fluido\">\r\n        <p>Este contenedor es fluido y se ajusta al tamaño de la pantalla.</p>\r\n    </div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .contenedor-fluido {\r",
                                "        width: 60%;\r",
                                "        margin: auto;\r",
                                "        padding: 20px;\r",
                                "        background-color: lightblue;\r",
                                "        text-align: center;\r",
                                "    }\r",
                                "</style>\r",
                                "<div style=\"border: solid 1px white;\">\r",
                                "    <div class=\"contenedor-fluido\">\r",
                                "        <p>Este contenedor es fluido y se ajusta al tamaño de la pantalla.</p>\r",
                                "    </div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "2. **Media Queries:** Permiten aplicar estilos específicos según el tamaño del dispositivo.\r\n\r\n   **Media Query Breakpoints:** Los breakpoints son puntos de quiebre en los que se aplican diferentes estilos CSS en función del tamaño de la pantalla. Los tamaños de pantalla más utilizados son:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/3184efe50eea10032f3078b37b4baed3cf0e2817/image-1-responsive.png\" height=\"320px\"/><img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/3184efe50eea10032f3078b37b4baed3cf0e2817/image-2-responsive.png\" height=\"320px\"/>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "   - **Pequeñas (hasta 600px)**: para teléfonos móviles.\r\n   - **Medianas (600px - 1024px)**: para tabletas y pantallas medianas.\r\n   - **Grandes (más de 1024px)**: para computadoras de escritorio.\r\n\r\n   **Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .caja {\r\n        width: 95%;\r\n        background-color: lightgray;\r\n        padding: 20px;\r\n        text-align: center;\r\n        margin: auto;\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        .caja {\r\n            background-color: lightgreen;\r\n            font-size: 14px;\r\n        }\r\n\r\n        .device-label::after {\r\n            content: \"Dispositivo pequeño (600px)\";\r\n        }\r\n    }\r\n\r\n    @media (min-width: 601px) and (max-width: 1024px) {\r\n        .caja {\r\n            background-color: lightcoral;\r\n            font-size: 18px;\r\n        }\r\n\r\n        .device-label::after {\r\n            content: \"Dispositivo mediano (601px - 1024px)\";\r\n        }\r\n    }\r\n\r\n    @media (min-width: 1025px) {\r\n        .caja {\r\n            background-color: lightblue;\r\n            font-size: 22px;\r\n        }\r\n\r\n        .device-label::after {\r\n            content: \"Dispositivo grande (1024px+)\";\r\n        }\r\n    }\r\n</style>\r\n<label class=\"device-label\"></label>\r\n<hr>\r\n<div class=\"caja\">Contenido adaptable</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .caja {\r",
                                "        width: 95%;\r",
                                "        background-color: lightgray;\r",
                                "        padding: 20px;\r",
                                "        text-align: center;\r",
                                "        margin: auto;\r",
                                "    }\r",
                                "\r",
                                "    @media (max-width: 600px) {\r",
                                "        .caja {\r",
                                "            background-color: lightgreen;\r",
                                "            font-size: 14px;\r",
                                "        }\r",
                                "\r",
                                "        .device-label::after {\r",
                                "            content: \"Dispositivo pequeño (600px)\";\r",
                                "        }\r",
                                "    }\r",
                                "\r",
                                "    @media (min-width: 601px) and (max-width: 1024px) {\r",
                                "        .caja {\r",
                                "            background-color: lightcoral;\r",
                                "            font-size: 18px;\r",
                                "        }\r",
                                "\r",
                                "        .device-label::after {\r",
                                "            content: \"Dispositivo mediano (601px - 1024px)\";\r",
                                "        }\r",
                                "    }\r",
                                "\r",
                                "    @media (min-width: 1025px) {\r",
                                "        .caja {\r",
                                "            background-color: lightblue;\r",
                                "            font-size: 22px;\r",
                                "        }\r",
                                "\r",
                                "        .device-label::after {\r",
                                "            content: \"Dispositivo grande (1024px+)\";\r",
                                "        }\r",
                                "    }\r",
                                "</style>\r",
                                "<label class=\"device-label\"></label>\r",
                                "<hr>\r",
                                "<div class=\"caja\">Contenido adaptable</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "3. **Unidades relativas:** Usar unidades como `%`, `em`, `rem` para un diseño adaptable."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Explicación:**\r\n   - **`%` (porcentaje):** Relativa al tamaño del contenedor padre. Se usa para definir anchos, márgenes y rellenos.\r\n   - **`em`:** Relativa al tamaño de la fuente del elemento padre. Útil para definir tamaños de fuente y espaciados.\r\n   - **`rem`:** Relativa al tamaño de la fuente del elemento raíz (`<html>`), asegurando consistencia en toda la página."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .contenedor-principal {\r\n        width: 80%;\r\n        margin: auto;\r\n        background-color: lightgray;\r\n        padding: 20px;\r\n        color: black;\r\n    }\r\n\r\n    html {\r\n        font-size: 40px;\r\n    }\r\n\r\n    .contenedor-principal {\r\n        font-size: 20px;\r\n    }\r\n\r\n    .texto-em {\r\n        font-size: 2em;\r\n    }\r\n\r\n    .texto-rem {\r\n        font-size: 1.5rem;\r\n    }\r\n</style>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .contenedor-principal {\r",
                                "        width: 80%;\r",
                                "        margin: auto;\r",
                                "        background-color: lightgray;\r",
                                "        padding: 20px;\r",
                                "        color: black;\r",
                                "    }\r",
                                "\r",
                                "    html {\r",
                                "        font-size: 40px;\r",
                                "    }\r",
                                "\r",
                                "    .contenedor-principal {\r",
                                "        font-size: 20px;\r",
                                "    }\r",
                                "\r",
                                "    .texto-em {\r",
                                "        font-size: 2em;\r",
                                "    }\r",
                                "\r",
                                "    .texto-rem {\r",
                                "        font-size: 1.5rem;\r",
                                "    }\r",
                                "</style>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "html",
            "source": [
                "\r\n<div class=\"contenedor-principal\">\r\n    <p class=\"texto-em\">Este texto usa `em`.</p>\r\n    <p class=\"texto-rem\">Este texto usa `rem`.</p>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "\r",
                                "<div class=\"contenedor-principal\">\r",
                                "    <p class=\"texto-em\">Este texto usa `em`.</p>\r",
                                "    <p class=\"texto-rem\">Este texto usa `rem`.</p>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**Textos con breakpoints**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .text-responsivo.contenedor-principal {\r\n        font-size: 20px;\r\n    }\r\n\r\n    /* Media query para hacer los textos responsivos */\r\n    @media (max-width: 600px) {\r\n        .text-responsivo .texto-em {\r\n            font-size: 1.5em;\r\n        }\r\n        .text-responsivo .texto-em:after {\r\n            content: \" (600px)\";\r\n        }\r\n    }\r\n\r\n    @media (min-width: 601px) and (max-width: 1024px) {\r\n        .text-responsivo .texto-em {\r\n            font-size: 2.5em;\r\n        }\r\n        .text-responsivo .texto-em:after {\r\n            content: \" (601px - 1024px)\";\r\n        }\r\n    }\r\n\r\n    @media (min-width: 1025px) {\r\n        .text-responsivo .texto-em {\r\n            font-size: 3em;\r\n        }\r\n        .text-responsivo .texto-em:after {\r\n            content: \" (1025px+)\";\r\n        }\r\n    }\r\n</style>\r\n\r\n<div class=\"text-responsivo contenedor-principal\">\r\n    <p class=\"texto-em\">Este es un texto resposivo.</p>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .text-responsivo.contenedor-principal {\r",
                                "        font-size: 20px;\r",
                                "    }\r",
                                "\r",
                                "    /* Media query para hacer los textos responsivos */\r",
                                "    @media (max-width: 600px) {\r",
                                "        .text-responsivo .texto-em {\r",
                                "            font-size: 1.5em;\r",
                                "        }\r",
                                "        .text-responsivo .texto-em:after {\r",
                                "            content: \" (600px)\";\r",
                                "        }\r",
                                "    }\r",
                                "\r",
                                "    @media (min-width: 601px) and (max-width: 1024px) {\r",
                                "        .text-responsivo .texto-em {\r",
                                "            font-size: 2.5em;\r",
                                "        }\r",
                                "        .text-responsivo .texto-em:after {\r",
                                "            content: \" (601px - 1024px)\";\r",
                                "        }\r",
                                "    }\r",
                                "\r",
                                "    @media (min-width: 1025px) {\r",
                                "        .text-responsivo .texto-em {\r",
                                "            font-size: 3em;\r",
                                "        }\r",
                                "        .text-responsivo .texto-em:after {\r",
                                "            content: \" (1025px+)\";\r",
                                "        }\r",
                                "    }\r",
                                "</style>\r",
                                "\r",
                                "<div class=\"text-responsivo contenedor-principal\">\r",
                                "    <p class=\"texto-em\">Este es un texto resposivo.</p>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "#### Ejemplo práctico: Layout responsivo con Flexbox"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Objetivo:** Crear una página con un diseño de tarjetas que se adapten a diferentes tamaños de pantalla utilizando Flexbox y Media Queries.\r\n\r\n**HTML:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .contenedor-flex {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        justify-content: space-around;\r\n    }\r\n\r\n    .tarjeta {\r\n        width: 100%;\r\n        max-width: 300px;\r\n        padding: 20px;\r\n        background-color: lightcoral;\r\n        color: black;\r\n        text-align: center;\r\n        margin-top: 4px;\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n        .contenedor-flex {\r\n            flex-direction: column;\r\n        }\r\n        .contender-responsivo .device:after {\r\n            content: \" column (600px)\";\r\n        }\r\n    }\r\n\r\n    @media (min-width: 601px) and (max-width: 1024px) {\r\n        .contenedor-flex {\r\n            flex-direction: row;\r\n            justify-content: center;\r\n        }\r\n\r\n        .contender-responsivo .device:after {\r\n            content: \" row (601px - 1024px)\";\r\n        }\r\n    }\r\n\r\n    @media (min-width: 1025px) {\r\n        .contenedor-flex {\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n        }\r\n\r\n        .contender-responsivo .device:after {\r\n            content: \" row (1024px+)\";\r\n        }\r\n    }\r\n</style>\r\n<div class=\"contenedor-responsivo\">\r\n    <label class=\"device\"></label>\r\n    <hr>\r\n    <div class=\"contenedor-flex\">\r\n        <div class=\"tarjeta\">Tarjeta 1</div>\r\n        <div class=\"tarjeta\">Tarjeta 2</div>\r\n        <div class=\"tarjeta\">Tarjeta 3</div>\r\n    </div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .contenedor-flex2 {\r",
                                "        display: flex;\r",
                                "        flex-direction: row;\r",
                                "        flex-wrap: wrap;\r",
                                "        justify-content: space-around;\r",
                                "    }\r",
                                "\r",
                                "    .tarjeta2 {\r",
                                "        width: 100%;\r",
                                "        max-width: 300px;\r",
                                "        padding: 20px;\r",
                                "        background-color: lightcoral;\r",
                                "        color: black;\r",
                                "        text-align: center;\r",
                                "        margin-top: 4px;\r",
                                "    }\r",
                                "\r",
                                "    @media (max-width: 600px) {\r",
                                "        .contenedor-flex2 {\r",
                                "            flex-direction: column;\r",
                                "        }\r",
                                "        .contender-responsivo2 .device:after {\r",
                                "            content: \" column (600px)\";\r",
                                "        }\r",
                                "    }\r",
                                "\r",
                                "    @media (min-width: 601px) and (max-width: 1024px) {\r",
                                "        .contenedor-flex2 {\r",
                                "            flex-direction: row;\r",
                                "            justify-content: center;\r",
                                "        }\r",
                                "\r",
                                "        .contender-responsivo2 .device:after {\r",
                                "            content: \" row (601px - 1024px)\";\r",
                                "        }\r",
                                "    }\r",
                                "\r",
                                "    @media (min-width: 1025px) {\r",
                                "        .contenedor-flex2 {\r",
                                "            flex-direction: row;\r",
                                "            justify-content: space-between;\r",
                                "        }\r",
                                "\r",
                                "        .contender-responsivo2 .device:after {\r",
                                "            content: \" row (1024px+)\";\r",
                                "        }\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"contenedor-responsivo2\">\r",
                                "    <label class=\"device\"></label>\r",
                                "    <hr>\r",
                                "    <div class=\"contenedor-flex2\">\r",
                                "        <div class=\"tarjeta2\">Tarjeta 1</div>\r",
                                "        <div class=\"tarjeta2\">Tarjeta 2</div>\r",
                                "        <div class=\"tarjeta2\">Tarjeta 3</div>\r",
                                "    </div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**CSS:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                ""
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .contenedor-flex {\r",
                                "        display: flex;\r",
                                "        flex-wrap: wrap;\r",
                                "        justify-content: space-around;\r",
                                "        gap: 20px;\r",
                                "    }\r",
                                "\r",
                                "    .tarjeta {\r",
                                "        width: 100%;\r",
                                "        max-width: 300px;\r",
                                "        padding: 20px;\r",
                                "        background-color: lightblue;\r",
                                "        border: 1px solid blue;\r",
                                "        text-align: center;\r",
                                "    }\r",
                                "\r",
                                "    @media (max-width: 600px) {\r",
                                "        .contenedor-flex {\r",
                                "            flex-direction: column;\r",
                                "        }\r",
                                "        .contenedor-responsivo .device:after {\r",
                                "            content: \" column (600px)\";\r",
                                "        }\r",
                                "    }\r",
                                "\r",
                                "    @media (min-width: 601px) and (max-width: 1024px) {\r",
                                "        .contenedor-flex {\r",
                                "            justify-content: center;\r",
                                "        }\r",
                                "        .contenedor-responsivo .device:after {\r",
                                "            content: \" row (601px - 1024px)\";\r",
                                "        }\r",
                                "    }\r",
                                "\r",
                                "    @media (min-width: 1025px) {\r",
                                "        .contenedor-flex {\r",
                                "            justify-content: space-between;\r",
                                "        }\r",
                                "        .contenedor-responsivo .device:after {\r",
                                "            content: \" row (1025px+)\";\r",
                                "        }\r",
                                "    }\r",
                                "</style>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**Resultado esperado:** Un diseño de tarjetas que se ajusta a pantallas pequeñas, medianas y grandes, reorganizándose de manera óptima."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Selectores avanzados de CSS"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Los selectores avanzados permiten aplicar estilos a elementos específicos de manera más precisa."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**1. Selector de atributo**\r\n   - Aplica estilos a elementos que tienen atributos específicos."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    input[type=\"text\"] {\r\n    border: 2px solid blue;\r\n}\r\n</style>\r\n<input type=\"text\" placeholder=\"Nombre\">\r\n<input type=\"password\" placeholder=\"Contraseña\">"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    input[type=\"text\"] {\r",
                                "    border: 2px solid blue;\r",
                                "}\r",
                                "</style>\r",
                                "<input type=\"text\" placeholder=\"Nombre\">\r",
                                "<input type=\"password\" placeholder=\"Contraseña\">"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**2. Selectores combinadores**\r\n   - **Selector de hijo directo (`>`)**: Aplica estilos solo a los elementos hijos directos de un contenedor."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .contenedor > p {\r\n        color: red;\r\n    }\r\n</style>\r\n<div class=\"contenedor\">\r\n    <p>Este párrafo será rojo</p>\r\n    <div>\r\n        <p>Este párrafo NO será rojo</p>\r\n    </div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .contenedor > p {\r",
                                "        color: red;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"contenedor\">\r",
                                "    <p>Este párrafo será rojo</p>\r",
                                "    <div>\r",
                                "        <p>Este párrafo NO será rojo</p>\r",
                                "    </div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                " - **Selector de hermano adyacente (`+`)**: Aplica estilos al elemento que está inmediatamente después de otro."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    h1.titulo + p.cursiva {\r\n        font-style: italic;\r\n        font-size: 20px;\r\n        text-decoration: underline;\r\n        color: red;\r\n    }\r\n</style>\r\n<h1 class=\"titulo\">Título</h1>\r\n<p class=\"cursiva\">Párrafo en cursiva</p>\r\n<p class=\"cursiva\">Párrafo en cursiva</p>\r\n<p class=\"cursiva\">Párrafo en cursiva</p>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    h1.titulo + p.cursiva {\r",
                                "        font-style: italic;\r",
                                "        font-size: 20px;\r",
                                "        text-decoration: underline;\r",
                                "        color: red;\r",
                                "    }\r",
                                "</style>\r",
                                "<h1 class=\"titulo\">Título</h1>\r",
                                "<p class=\"cursiva\">Párrafo en cursiva</p>\r",
                                "<p class=\"cursiva\">Párrafo en cursiva</p>\r",
                                "<p class=\"cursiva\">Párrafo en cursiva</p>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **Selector de hermanos generales (`~`)**: Aplica estilos a todos los elementos hermanos que siguen a un elemento."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n   h1.titulo ~ p.hermano {\r\n      color: green;\r\n   }\r\n</style>\r\n\r\n<h1 class=\"titulo\">Título</h1>\r\n<p class=\"hermano\">Este será verde</p>\r\n<p class=\"hermano\">Este también será verde</p>\r\n<p class=\"hermano\">Este otro también será verde</p>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "   h1.titulo ~ p.hermano {\r",
                                "      color: green;\r",
                                "   }\r",
                                "</style>\r",
                                "\r",
                                "<h1 class=\"titulo\">Título</h1>\r",
                                "<p class=\"hermano\">Este será verde</p>\r",
                                "<p class=\"hermano\">Este también será verde</p>\r",
                                "<p class=\"hermano\">Este otro también será verde</p>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**3. Pseudoclases**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- Permiten aplicar estilos a elementos en estados específicos."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    a.evento-mouse:hover {\r\n        color: red;\r\n    }\r\n\r\n    input.evento-focus:focus {\r\n        border: 5px solid red;\r\n    }\r\n</style>\r\n<a href=\"#\" class=\"evento-mouse\">Pasa el mouse sobre este enlace</a>\r\n<input class=\"evento-focus\" type=\"text\" placeholder=\"Escribe aquí\">"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    a.evento-mouse:hover {\r",
                                "        color: red;\r",
                                "    }\r",
                                "\r",
                                "    input.evento-focus:focus {\r",
                                "        border: 5px solid red;\r",
                                "    }\r",
                                "</style>\r",
                                "<a href=\"#\" class=\"evento-mouse\">Pasa el mouse sobre este enlace</a>\r",
                                "<input class=\"evento-focus\" type=\"text\" placeholder=\"Escribe aquí\">"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**4. Pseudoelementos**\r\n   - Permiten aplicar estilos a partes específicas de un elemento."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .contenedor-pseudoelementos p {\r\n        color: white;\r\n        display: inline-block;\r\n    }\r\n    .contenedor-pseudoelementos p::first-letter {\r\n        font-size: 2em;\r\n        color: red;\r\n    }\r\n\r\n    .contenedor-pseudoelementos p::before {\r\n        content: \"Dedo 👉 \";\r\n        color: greenyellow;\r\n    }\r\n    .contenedor-pseudoelementos p::after {\r\n        content: \"⭐ Estrella\";\r\n        color: yellow;\r\n    }\r\n</style>\r\n<div class=\"contenedor-pseudoelementos\">\r\n    <p>Texto de ejemplo para mostrar pseudoelementos.</p>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .contenedor-pseudoelementos p {\r",
                                "        color: white;\r",
                                "        display: inline-block;\r",
                                "    }\r",
                                "    .contenedor-pseudoelementos p::first-letter {\r",
                                "        font-size: 2em;\r",
                                "        color: red;\r",
                                "    }\r",
                                "\r",
                                "    .contenedor-pseudoelementos p::before {\r",
                                "        content: \"Dedo 👉 \";\r",
                                "        color: greenyellow;\r",
                                "    }\r",
                                "    .contenedor-pseudoelementos p::after {\r",
                                "        content: \"⭐ Estrella\";\r",
                                "        color: yellow;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"contenedor-pseudoelementos\">\r",
                                "    <p>Texto de ejemplo para mostrar pseudoelementos.</p>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**5. Selectores lógicos**\r\n   - Se utilizan para combinar selectores y aplicar estilos condicionales."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "   - **`:not`**: Excluye elementos específicos."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .selector-logico p.destacado {\r\n        color: red;\r\n    }\r\n\r\n    .selector-logico p:not(.destacado) {\r\n        color: gray;\r\n    }\r\n</style>\r\n<div class=\"selector-logico\">\r\n    <p class=\"destacado\">Este párrafo se excluye</p>\r\n    <p >Este párrafo será gris</p>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .selector-logico p.destacado {\r",
                                "        color: red;\r",
                                "    }\r",
                                "\r",
                                "    .selector-logico p:not(.destacado) {\r",
                                "        color: gray;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"selector-logico\">\r",
                                "    <p class=\"destacado\">Este párrafo se excluye</p>\r",
                                "    <p >Este párrafo será gris</p>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **`:is`**: Permite seleccionar elementos que coincidan con cualquier selector dentro de su lista de argumentos."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .contedor-is :is(h2, h3, h5) {\r\n        color: gold;\r\n        font-weight: bold;\r\n    }\r\n</style>\r\n<div class=\"contedor-is\">\r\n    <h1>Encabezado 2</h1>\r\n    <h2>Encabezado 2</h2>\r\n    <h3>Encabezado 3</h3>\r\n    <h4>Encabezado 4</h4>\r\n    <h5>Encabezado 4</h5>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .contedor-is :is(h2, h3, h5) {\r",
                                "        color: gold;\r",
                                "        font-weight: bold;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"contedor-is\">\r",
                                "    <h1>Encabezado 2</h1>\r",
                                "    <h2>Encabezado 2</h2>\r",
                                "    <h3>Encabezado 3</h3>\r",
                                "    <h4>Encabezado 4</h4>\r",
                                "    <h5>Encabezado 4</h5>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "El selector `:is` simplifica la escritura de múltiples selectores y permite aplicar el mismo estilo a varios elementos diferentes"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "   - **`:empty`**: Selecciona elementos que no tienen contenido."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .contedor-vacio div:empty {\r\n        border: 1px dashed red;\r\n    }\r\n</style>\r\n<div class=\"contedor-vacio\">\r\n    <div></div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .contedor-vacio div:empty {\r",
                                "        border: 1px dashed red;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"contedor-vacio\">\r",
                                "    <div>\r",
                                "        <span></span>\r",
                                "    </div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "   - **`:first-child` y `:last-child`**: Seleccionan el primer o último hijo de un elemento padre."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .contedor-orden div:first-child {\r\n        background-color: yellow;\r\n        color: black;\r\n        padding: 2px 4px;\r\n    }\r\n\r\n    .contedor-orden div:last-child {\r\n        background-color: lightblue;\r\n        color: black;\r\n        padding: 2px 4px;\r\n    }\r\n</style>\r\n<div class=\"contedor-orden\">\r\n    <div>Primer elemento</div>\r\n    <div>Segundo elemento</div>\r\n    <div>Tercer elemento</div>\r\n    <div>Cuarto elemento</div>\r\n    <div>Último elemento</div>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .contedor-orden div:first-child {\r",
                                "        background-color: yellow;\r",
                                "        color: black;\r",
                                "        padding: 2px 4px;\r",
                                "    }\r",
                                "\r",
                                "    .contedor-orden div:last-child {\r",
                                "        background-color: lightblue;\r",
                                "        color: black;\r",
                                "        padding: 2px 4px;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"contedor-orden\">\r",
                                "    <div>Primer elemento</div>\r",
                                "    <div>Segundo elemento</div>\r",
                                "    <div>Tercer elemento</div>\r",
                                "    <div>Cuarto elemento</div>\r",
                                "    <div>Último elemento</div>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "   - **`:nth-child(n)`**: Aplica estilos a elementos específicos en función de su posición en el contenedor."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<style>\r\n    .contendor-lista p.destacado {\r\n        color: white;\r\n    }\r\n\r\n    .contendor-lista ul li:nth-child(odd) {\r\n        background-color: yellow;\r\n        color: black;\r\n    }\r\n\r\n    .contendor-lista ul li:nth-child(even) {\r\n        background-color: green;\r\n        color: white;\r\n    }\r\n\r\n    /*Por indice*/\r\n    .contendor-lista ol li:nth-child(3) {\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n\r\n    .contendor-lista ol li:nth-child(5) {\r\n        background-color: purple;\r\n        color: white;\r\n    }\r\n\r\n    .contendor-lista ol li:nth-child(7) {\r\n        background-color: aquamarine;\r\n        color: black;\r\n    }\r\n\r\n    .contendor-lista ol li:nth-child(2) {\r\n        background-color: yellow;\r\n        color: black;\r\n    }\r\n</style>\r\n<div class=\"contendor-lista\">\r\n    <!-- Lista desordenada -->\r\n    <ul>\r\n        <li>Elemento 1</li>\r\n        <li>Elemento 2</li>\r\n        <li>Elemento 3</li>\r\n        <li>Elemento 4</li>\r\n        <li>Elemento 5</li>\r\n        <li>Elemento 6</li>\r\n        <li>Elemento 7</li>\r\n        <li>Elemento 8</li>\r\n    </ul>\r\n    <hr />\r\n    <!-- Lista ordenada -->\r\n    <ol>\r\n        <li>Elemento 1</li>\r\n        <li>Elemento 2</li>\r\n        <li>Elemento 3</li>\r\n        <li>Elemento 4</li>\r\n        <li>Elemento 5</li>\r\n        <li>Elemento 6</li>\r\n        <li>Elemento 7</li>\r\n        <li>Elemento 8</li>\r\n    </ol>\r\n</div>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style>\r",
                                "    .contendor-lista p.destacado {\r",
                                "        color: white;\r",
                                "    }\r",
                                "\r",
                                "    .contendor-lista ul li:nth-child(odd) {\r",
                                "        background-color: yellow;\r",
                                "        color: black;\r",
                                "    }\r",
                                "\r",
                                "    .contendor-lista ul li:nth-child(even) {\r",
                                "        background-color: green;\r",
                                "        color: white;\r",
                                "    }\r",
                                "\r",
                                "    /*Por indice*/\r",
                                "    .contendor-lista ol li:nth-child(3) {\r",
                                "        background-color: red;\r",
                                "        color: white;\r",
                                "    }\r",
                                "\r",
                                "    .contendor-lista ol li:nth-child(5) {\r",
                                "        background-color: purple;\r",
                                "        color: white;\r",
                                "    }\r",
                                "\r",
                                "    .contendor-lista ol li:nth-child(7) {\r",
                                "        background-color: aquamarine;\r",
                                "        color: black;\r",
                                "    }\r",
                                "\r",
                                "    .contendor-lista ol li:nth-child(2) {\r",
                                "        background-color: yellow;\r",
                                "        color: black;\r",
                                "    }\r",
                                "</style>\r",
                                "<div class=\"contendor-lista\">\r",
                                "    <!-- Lista desordenada -->\r",
                                "    <ul>\r",
                                "        <li>Elemento 1</li>\r",
                                "        <li>Elemento 2</li>\r",
                                "        <li>Elemento 3</li>\r",
                                "        <li>Elemento 4</li>\r",
                                "        <li>Elemento 5</li>\r",
                                "        <li>Elemento 6</li>\r",
                                "        <li>Elemento 7</li>\r",
                                "        <li>Elemento 8</li>\r",
                                "    </ul>\r",
                                "    <hr />\r",
                                "    <!-- Lista ordenada -->\r",
                                "    <ol>\r",
                                "        <li>Elemento 1</li>\r",
                                "        <li>Elemento 2</li>\r",
                                "        <li>Elemento 3</li>\r",
                                "        <li>Elemento 4</li>\r",
                                "        <li>Elemento 5</li>\r",
                                "        <li>Elemento 6</li>\r",
                                "        <li>Elemento 7</li>\r",
                                "        <li>Elemento 8</li>\r",
                                "    </ol>\r",
                                "</div>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "Estos selectores avanzados permiten un mayor control sobre la estructura y apariencia de la página."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Clase 3: Introducción a Git y GitHub"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Introducción a Git"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**¿Qué es Git?**\r\nGit es un sistema de control de versiones distribuido que permite a los desarrolladores rastrear cambios en el código fuente durante el desarrollo de software. Es ampliamente utilizado en la industria para la colaboración y la gestión del código.\r\n\r\n**Características de Git:**\r\n- Seguimiento de cambios en archivos de manera eficiente.\r\n- Soporte para trabajo colaborativo.\r\n- Manejo de múltiples versiones del código simultáneamente.\r\n- Repositorios distribuidos, lo que permite trabajar sin conexión.\r\n\r\n**Comandos básicos de Git:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/e9d4eedc4f39527e4f8b8f768c96149281d1ffcb/image-2-git.png\" height=\"290px\">"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "git --version"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "git version 2.45.1.windows.1",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "shellscript",
            "source": [
                "git config --global user.name \"Joe Example\""
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "git config --global user.email joe@example.com"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Inicializar un repositorio Git\ngit init"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Clonar un repositorio existente\ngit clone <URL-del-repositorio>"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Agregar archivos al área de preparación\ngit add <archivo>"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Confirmar cambios\ngit commit -m \"Mensaje de confirmación\""
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Ver el estado del repositorio\ngit status"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Ver el historial de cambios\ngit log"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Enviar cambios a un repositorio remoto\ngit push origin master"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Obtener los últimos cambios del repositorio remoto\ngit pull origin master"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "git branch\ngit checkout -b nueva-funcionalidad"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Staging Area y Working Area**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<div style=\"background-color: white; width: fit-content\"><img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/e9d4eedc4f39527e4f8b8f768c96149281d1ffcb/image-git.png\" height=\"390px\"></div>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "En Git, el **\"staging area\"** (área de preparación) y el **\"working area\"** (área de trabajo) son conceptos clave para gestionar los cambios en los archivos antes de confirmarlos en el historial del repositorio.\r\n\r\n1. **Working Area (Área de Trabajo):**\r\n   - Es el lugar donde se realizan los cambios en los archivos del proyecto.\r\n   - Aquí los desarrolladores pueden modificar, agregar o eliminar archivos sin afectar directamente el historial de versiones.\r\n   - Para ver qué archivos han sido modificados en esta área, se puede usar el comando:\r\n     ```bash\r\n     git status\r\n     ```\r\n\r\n2. **Staging Area (Área de Preparación):**\r\n   - También llamada **índice**, es donde se agregan los cambios que se desean confirmar en el próximo commit.\r\n   - Los archivos deben ser agregados explícitamente a esta área usando el comando:\r\n     ```bash\r\n     git add <archivo>\r\n     ```"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Flujo de trabajo típico:**\r\n1. Realizas cambios en tus archivos (Working Area).\r\n2. Usas `git add` para moverlos a la Staging Area.\r\n3. Confirmas los cambios con `git commit`, lo que almacena definitivamente los archivos en el historial del repositorio.\r\n\r\n**Ejemplo práctico:**\r\n"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Crear un nuevo directorio para el repositorio\nmkdir mi_proyecto\ncd mi_proyecto"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Inicializar un nuevo repositorio Git\ngit init"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Crear un archivo HTML y realizar cambios\necho \"<html><body><h1>Hola, Git</h1></body></html>\" > index.html"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Ver el estado del repositorio\ngit status"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Agregar el archivo a la staging area\ngit add index.html\n"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Confirmar los cambios\ngit commit -m \"Primer commit: Agregar archivo HTML inicial\""
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/e9d4eedc4f39527e4f8b8f768c96149281d1ffcb/image-1-git.png\" height=\"290px\"/>"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Crear una nueva rama\ngit checkout -b nueva-rama"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Realizar cambios en el archivo\necho \"<p>Nueva funcionalidad añadida</p>\" >> index.html"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Agregar y confirmar los cambios en la nueva rama\ngit add index.html\ngit commit -m \"Agregar nueva funcionalidad\""
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Ver el historial de commits\ngit log --oneline"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Volver a la rama principal\ngit checkout master"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Fusionar la nueva rama en la rama principal\ngit merge nueva-rama"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "# Ver el historial después de la fusión\ngit log --oneline"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Este flujo de trabajo cubre la creación de un repositorio, la realización de cambios, el registro de versiones mediante commits, la creación de ramas y la fusión de cambios en la rama principal."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Introducción a GitHub"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**¿Qué es GitHub?**\r\nGitHub es una plataforma de alojamiento de código basada en la web que utiliza Git para la gestión de versiones. Permite colaborar en proyectos, gestionar código de forma centralizada y proporciona herramientas adicionales como gestión de problemas, revisiones de código y CI/CD.\r\n\r\n**Conceptos clave en GitHub:**\r\n- **Repositorio:** Espacio donde se almacena el código y su historial de versiones.\r\n- **Branch (rama):** Línea de desarrollo separada del código principal.\r\n- **Pull Request:** Propuesta de cambios que se puede revisar y fusionar en la rama principal.\r\n- **Fork:** Copia de un repositorio en tu cuenta de GitHub para realizar cambios sin afectar el original."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Ejemplo práctico con GitHub:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "1. **Clonar un repositorio desde GitHub:**"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "git clone https://github.com/usuario/proyecto.git\ncd proyecto"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "2. **Agregar un repositorio remoto manualmente:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Nota: Si el repositorio local ya existe."
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "   # Inicializar un repositorio local\n   git init\n   \n   # Agregar un repositorio remoto\n   git remote add origin https://github.com/usuario/proyecto.git\n\n   # Descargar los cambios del repositorio remoto\n   git pull origin main"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "2. **Crear una nueva rama para trabajar en una funcionalidad:**"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "git checkout -b nueva-funcionalidad"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "3. **Realizar cambios en el código y añadirlos a la staging area:**"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "echo \"<p>Nueva funcionalidad</p>\" >> index.html\ngit add index.html"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "4. **Confirmar los cambios localmente:**"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "git commit -m \"Agregar nueva funcionalidad a la página principal\""
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "5. **Subir la rama al repositorio remoto:**"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "git push origin nueva-funcionalidad"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "6. **Crear un Pull Request en GitHub:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "\r\n   - Ir a GitHub y abrir el repositorio.\r\n   - Seleccionar la rama `nueva-funcionalidad` y hacer clic en \"New Pull Request\".\r\n   - Añadir una descripción y solicitar revisión."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "7. **Fusionar los cambios en la rama principal:**\r\n   - Una vez aprobados, hacer clic en \"Merge Pull Request\" en GitHub."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "8. **Actualizar el repositorio local con los últimos cambios:**"
            ],
            "outputs": []
        },
        {
            "language": "shellscript",
            "source": [
                "git checkout master\ngit pull origin master"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "\r\n\r\nEste flujo de trabajo cubre la creación de ramas, la gestión de cambios, la colaboración mediante pull requests y la sincronización con el repositorio remoto en GitHub."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Conclusión:**\r\nGit y GitHub son herramientas esenciales para la colaboración y gestión del código en proyectos de desarrollo de software. Su uso adecuado facilita el control de versiones, la colaboración y la automatización del desarrollo."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Clase 4: Introducción a JavaScript"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### Objetivo:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Definición:** Lenguaje de programación que permite agregar interactividad."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "JavaScript fue creado en 1995 por Brendan Eich mientras trabajaba en Netscape Communications. Originalmente, su nombre era Mocha, luego LiveScript, y finalmente JavaScript para aprovechar la popularidad de Java en ese momento. Desde entonces, ha evolucionado considerablemente con la estandarización de ECMAScript (ES), que ha introducido nuevas características en diferentes versiones:\r\n\r\n- **ES5 (2009):** Introducción de `strict mode`, `JSON.parse`, y mejoras en métodos de arrays.\r\n- **ES6 (2015):** Let y const, arrow functions, template literals, clases, promesas, y módulos.\r\n- **ES7 - ES12 (2016 - 2021):** Mejoras como `async/await`, `optional chaining`, `BigInt`, y `nullish coalescing`.\r\n\r\nHoy en día, JavaScript es el lenguaje más utilizado en la web y se emplea tanto en frontend como en backend con **Node.js**.&#x20;"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Conceptos Clave:**\r\n- Uso del `<script>`."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "La etiqueta `<script>` se utiliza en HTML para incluir código JavaScript en una página web. Puede colocarse dentro del `<head>` o al final del `<body>` para mejorar el rendimiento de carga de la página."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Ejemplo de inclusión interna de JavaScript:"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<script>\r\n    function mostrarMensaje() {\r\n        alert(\"¡Hola, mundo!\");\r\n    }\r\n</script>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Ejemplo de inclusión externa de JavaScript:"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<script src=\"script.js\"></script>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Ejemplo:**"
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n  <title>JavaScript Básico</title>\r\n</head>\r\n\r\n<body>\r\n  <h1>¡Hola desde JavaScript!</h1>\r\n  <button onclick=\"saludar()\">Click Me</button>\r\n\r\n  <script>\r\n    function saludar() {\r\n      alert(\"Hola, bienvenido al mundo de JavaScript!\");\r\n    }\r\n  </script>\r\n</body>\r\n\r\n</html>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<!DOCTYPE html>\r",
                                "<html>\r",
                                "<head>\r",
                                "  <title>JavaScript Básico</title>\r",
                                "</head>\r",
                                "<body>\r",
                                "  <h1>¡Hola desde JavaScript!</h1>\r",
                                "  <button onclick=\"saludar()\">Click Me</button>\r",
                                "\r",
                                "  <script>\r",
                                "    function saludar() {\r",
                                "      alert(\"Hola, bienvenido al mundo de JavaScript!\");\r",
                                "    }\r",
                                "  </script>\r",
                                "</body>\r",
                                "</html>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**Ejercicio Práctico:**\r\n1. Crear una página con un botón que:\r\n   - Cambie el color de fondo.\r\n   - Muestra un mensaje en la consola."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Cambiar Color de Fondo</title>\r\n    <script>\r\n        function cambiarColor() {\r\n            document.body.style.backgroundColor = '#' + Math.floor(Math.random()*16777215).toString(16);\r\n            console.log(document.body.style.backgroundColor);\r\n            console.log(\"El color de fondo ha cambiado\");\r\n        }\r\n    </script>\r\n</head>\r\n<body>\r\n    <button onclick=\"cambiarColor()\">Cambiar Color</button>\r\n</body>\r\n</html>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "---\r\n\r\n#### Actividad General\r\nConstruir una página completa que incluya:\r\n1. Estructura básica en HTML.\r\n2. Estilos personalizados con CSS.\r\n3. Un script que interactúe con el usuario."
            ],
            "outputs": []
        },
        {
            "language": "html",
            "source": [
                "<html>\r\n    <head>\r\n        <style>\r\n\r\n        </style>\r\n        <script>\r\n            function mostrarMensaje() {\r\n                console.log(\"Hola a todos!\");\r\n            }\r\n        </script>\r\n    </head>\r\n    <body>\r\n        <button onclick=\"mostrarMensaje()\">Mostrar mensaje</button>\r\n    </body>\r\n</html>"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<html>\r",
                                "    <head>\r",
                                "        <style>\r",
                                "\r",
                                "        </style>\r",
                                "        <script>\r",
                                "            function mostrarMensaje() {\r",
                                "                console.log(\"Hola a todos!\");\r",
                                "            }\r",
                                "        </script>\r",
                                "    </head>\r",
                                "    <body>\r",
                                "        <button onclick=\"mostrarMensaje()\">Mostrar mensaje</button>\r",
                                "    </body>\r",
                                "</html>"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## Clase 5: JavaScript y Tipos de Datos"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### 1. Declaración de Variables en JavaScript"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "En JavaScript, se pueden declarar variables utilizando `var`, `let` y `const`. Cada una tiene un comportamiento distinto en términos de alcance y mutabilidad."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/0a3b7455ade818bf05e1e96ec7031bc0f32255f6/image-4image-js.png\" height=\"290px\"/>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`var`**: Tiene un alcance global o de función y puede ser redeclarada."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "var nombre = \"Juan\";\r\nconsole.log(nombre); // Juan\r\nvar nombre = \"Carlos\";\r\nconsole.log(nombre); // Carlos"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Juan",
                                "Carlos",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **`let`**: Tiene un alcance de bloque y no puede ser redeclarada en el mismo ámbito."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let edad = 25;\r\nconsole.log(edad); // 25\r\nedad = 30;\r\nconsole.log(edad); // 30"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "25",
                                "30",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **`const`**: Define una constante cuyo valor no puede cambiar después de ser asignado."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const PI = 3.1416;\r\nconsole.log(PI); // 3.1416\r\n// PI = 3.14; // Error: No se puede reasignar una constante"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "3.1416",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "const userName = \"garustrip\"\r\nconst PI = 3.1416;"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### 2. Tipos de Datos"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "JavaScript maneja diferentes tipos de datos primitivos y complejos. Los datos primitivos representan valores simples e inmutables, mientras que los datos complejos permiten almacenar múltiples valores y estructuras más sofisticadas."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### - **Primitivos:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- Number: Representa valores numéricos, tanto enteros como de punto flotante."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let numero = 42;\r\nconsole.log(numero);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "42",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "  - String: Cadenas de texto delimitadas por comillas simples o dobles."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let texto = \"Hola, mundo!\";\r\nconsole.log(texto);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Hola, mundo!",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- Boolean: Representa valores lógicos `true` o `false`."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let esVerdadero = false;\r\nconsole.log(esVerdadero);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "false",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- Undefined: Indica que una variable ha sido declarada pero no inicializada."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let noDefinido;\r\nconsole.log(noDefinido);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "undefined",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "  - Null: Representa un valor vacío o desconocido."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let vacio = null;\r\nconsole.log(vacio);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "null",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- Symbol: Identificadores únicos y primitivos."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let simbolo = Symbol(\"descripcion\");\r\nconsole.log(simbolo);"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "  - BigInt: Permite representar números enteros de gran tamaño."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let numeroGrande = BigInt(12345678901234567890);\r\nconsole.log(numeroGrande);"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### - **Complejos:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- Objetos: Colecciones de propiedades clave-valor."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let persona = { nombre: \"Juan\", edad: 30 };\r\nconsole.log(persona.nombre);\r\nconsole.log(persona.edad);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Juan",
                                "30",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- Arrays: Listas ordenadas de elementos indexados numéricamente."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let frutas = [\"Manzana\", \"Banana\", \"Uva\"];\r\nconsole.log(frutas[2]);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Uva",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "  - Funciones: Bloques de código reutilizables."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function saludar(nombre) {\r\n    return `Hola, ${nombre}!`;\r\n}\r\nconsole.log(saludar(\"Carlos\"));\r\nconsole.log(saludar(\"equipo Bootcamp\"));\r\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Hola, Carlos!",
                                "Hola, equipo Bootcamp!",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "### Estructuras de Control en JavaScript"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Las estructuras de control en JavaScript permiten modificar el flujo de ejecución del código según condiciones específicas o repeticiones necesarias."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#### 1. Secuencia\r\nLa secuencia es la forma más básica de control de flujo en la que el código se ejecuta línea por línea, en el orden en que se escribe."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(\"Paso 1\");\r\n\r\nconsole.log(\"Paso 2\");\r\n\r\nconsole.log(\"Paso 3\");"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Paso 1",
                                "Paso 2",
                                "Paso 3",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/0a3b7455ade818bf05e1e96ec7031bc0f32255f6/image-js.png\" height=\"490\"/>"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Un ejemplo de la vida real de secuencia sería seguir una **receta de cocina**. Los pasos deben ejecutarse en el orden correcto para obtener el resultado esperado:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(\"Paso 1: Precalentar el horno a 180°C\");\r\nconsole.log(\"Paso 2: Mezclar los ingredientes\");\r\nconsole.log(\"Paso 3: Verter la mezcla en el molde\");\r\nconsole.log(\"Paso 4: Hornear durante 30 minutos\");\r\nconsole.log(\"Paso 5: Dejar enfriar y servir\");"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Paso 1: Precalentar el horno a 180°C",
                                "Paso 2: Mezclar los ingredientes",
                                "Paso 3: Verter la mezcla en el molde",
                                "Paso 4: Hornear durante 30 minutos",
                                "Paso 5: Dejar enfriar y servir",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "#### 2. Control de flujo"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "El control de flujo en JavaScript permite dirigir la ejecución del programa según ciertas condiciones o estructuras de repetición. Estas estructuras ayudan a controlar la lógica del programa, permitiendo la toma de decisiones y la ejecución repetitiva de bloques de código."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "##### 2.1 Estructuras Condicionales"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Las estructuras condicionales permiten ejecutar diferentes bloques de código según si una condición se cumple o no, si es verdadera o falsa."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Un ejemplo de la vida real de una estructura condicional es un semáforo en la vía pública:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/0a3b7455ade818bf05e1e96ec7031bc0f32255f6/image-1image-js.png\" height=\"290px\"/>"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let luzSemaforo = \"rojo\";\r\n\r\n\r\nif (luzSemaforo === \"verde\") {\r\n    console.log(\"Puedes avanzar.\");\r\n} else if (luzSemaforo === \"amarillo\") {\r\n    console.log(\"Precaución, reduce la velocidad.\");\r\n} else if (luzSemaforo === \"rojo\") {\r\n    console.log(\"Detente.\");\r\n} else {\r\n    console.log(\"Averiado\")\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Detente.",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "En este caso, el comportamiento del conductor cambia dependiendo del color del semáforo, reflejando el uso de condicionales en la programación."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- `if`: Ejecuta un bloque de código si la condición es verdadera."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let edad = 30;\r\nif (edad >= 18) {\r\n    console.log(\"Eres mayor de edad.\");\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Eres mayor de edad.",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `if...else`: Proporciona una alternativa cuando la condición no se cumple."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let temperatura = 35;\r\nif (temperatura > 30) {\r\n    console.log(\"Hace mucho calor.\");\r\n} else {\r\n    console.log(\"El clima es agradable.\");\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Hace mucho calor.",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **`switch`**: Evalúa una expresión y ejecuta el caso correspondiente."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let dia = \"viernes\";\r\nswitch (dia) {\r\n    case \"lunes\":\r\n        console.log(\"Es el inicio de la semana.\");\r\n        break;\r\n    case \"viernes\":\r\n        console.log(\"Es el fin de la semana.\");\r\n        break;\r\n    default:\r\n        console.log(\"Es un día intermedio.\");\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Es el fin de la semana.",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- Operador ternario `? :`: Alternativa corta a `if` para asignaciones y retornos condicionales."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let resultado = (edad >= 18) ? \"Adulto\" : \"Menor de edad\";\r\n\r\nconsole.log(resultado);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Menor de edad",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `try..catch..finally`: Maneja errores de manera controlada."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "try {\r\n    let resultado = 10 / 0;\r\n    console.log(resultado);\r\n} catch (error) {\r\n    console.log(\"Se ha producido un error\", error);\r\n} finally {\r\n    console.log(\"Ejecución finalizada.\");\r\n}"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "También se pueden usar comparaciones múltiples, incluyendo estructuras condicionales anidadas y cláusulas de guarda (Guard Clause):"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **Condiciones en cadena:** \r\n    - `if...else if...else`: Permite evaluar múltiples condiciones secuenciales."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let temperatura = 5;\r\nif (temperatura > 35) {\r\n    console.log(\"Hace mucho calor.\");\r\n}  else if (temperatura < 0) {\r\n    console.log(\"Esta congelado.\");\r\n} else if (temperatura < 15) {\r\n    console.log(\"Hace frío.\");\r\n} else {\r\n    console.log(\"El clima es agradable.\");\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Hace frío.",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "function determinarClima(temperatura) {\r\n    if (temperatura > 35) {\r\n        return \"Hace mucho calor.\";\r\n    }  else if (temperatura < 0) {\r\n        return \"Esta congelado.\";\r\n    } else if (temperatura < 15) {\r\n        return \"Hace frío.\";\r\n    } else {\r\n        return \"El clima es agradable.\";\r\n    }\r\n}\r\n\r\nlet descripcionClima = determinarClima(25);\r\nconsole.log(descripcionClima);\r\n\r\n\r\ndescripcionClima = determinarClima(0);\r\nconsole.log(descripcionClima);\r\n\r\ndescripcionClima = determinarClima(16);\r\nconsole.log(descripcionClima);\r\n\r\n\r\ndescripcionClima = determinarClima(12);\r\nconsole.log(descripcionClima);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "El clima es agradable.",
                                "Hace frío.",
                                "El clima es agradable.",
                                "Hace frío.",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **Condicionales anidadas:**"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let edad = 20;\r\nif (edad > 0) {\r\n\r\n    if (edad < 18) {\r\n        console.log(\"Eres menor de edad.\");\r\n    } else if (edad < 65) {\r\n        console.log(\"Eres un adulto.\"); \r\n    } else {\r\n        console.log(\"Eres un adulto mayor.\");\r\n    }\r\n\r\n} else {\r\n    console.log(\"Edad no válida.\");\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Eres un adulto.",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **Cláusula de guarda:**"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function validarEdad(edad) {\r\n    if (edad <= 0) {\r\n        console.log(\"Edad no válida.\");\r\n        return;\r\n    }\r\n    if (edad < 18) {\r\n        console.log(\"Eres menor de edad.\");\r\n        return;\r\n    }\r\n    console.log(\"Eres mayor de edad.\");\r\n}\r\nvalidarEdad(25);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Eres mayor de edad.",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "**Ejemplo: Categorizar una calificación**"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function obtenerCategoria(calificacion) {\r\n    if (calificacion >= 90) {\r\n        return \"Excelente\";\r\n    } else if (calificacion >= 70) {\r\n        return \"Bueno\";\r\n    } else if (calificacion >= 50) {\r\n        return \"Regular\";\r\n    } else {\r\n        return \"Insuficiente\";\r\n    }\r\n}\r\nconsole.log(obtenerCategoria(75)); // Bueno"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Bueno",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "##### 2.2 Estructuras de Bucle (Loops)"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Los bucles permiten repetir la ejecución de un bloque de código múltiples veces."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/0a3b7455ade818bf05e1e96ec7031bc0f32255f6/image-2image-js.png\" height=\"290px\" />"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Un ejemplo de la vida real de un bucle sería una persona haciendo ejercicio en un gimnasio. Si decide hacer 10 flexiones, cada repetición representa una iteración en un bucle:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(\"Realizando flexión número:\", 1);\r\nconsole.log(\"Realizando flexión número:\", 2);\r\nconsole.log(\"Realizando flexión número:\", 3);\r\nconsole.log(\"Realizando flexión número:\", 4);\r\nconsole.log(\"Realizando flexión número:\", 5);\r\nconsole.log(\"Realizando flexión número:\", 6);\r\nconsole.log(\"Realizando flexión número:\", 7);\r\nconsole.log(\"Realizando flexión número:\", 8);\r\nconsole.log(\"Realizando flexión número:\", 9);\r\nconsole.log(\"Realizando flexión número:\", 10);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Realizando flexión número: 1",
                                "Realizando flexión número: 2",
                                "Realizando flexión número: 3",
                                "Realizando flexión número: 4",
                                "Realizando flexión número: 5",
                                "Realizando flexión número: 6",
                                "Realizando flexión número: 7",
                                "Realizando flexión número: 8",
                                "Realizando flexión número: 9",
                                "Realizando flexión número: 10",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "for (let i = 0; i < 25; i++) {\r\n    console.log(\"Realizando flexión número:\", i + 1);\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Realizando flexión número: 1",
                                "Realizando flexión número: 2",
                                "Realizando flexión número: 3",
                                "Realizando flexión número: 4",
                                "Realizando flexión número: 5",
                                "Realizando flexión número: 6",
                                "Realizando flexión número: 7",
                                "Realizando flexión número: 8",
                                "Realizando flexión número: 9",
                                "Realizando flexión número: 10",
                                "Realizando flexión número: 11",
                                "Realizando flexión número: 12",
                                "Realizando flexión número: 13",
                                "Realizando flexión número: 14",
                                "Realizando flexión número: 15",
                                "Realizando flexión número: 16",
                                "Realizando flexión número: 17",
                                "Realizando flexión número: 18",
                                "Realizando flexión número: 19",
                                "Realizando flexión número: 20",
                                "Realizando flexión número: 21",
                                "Realizando flexión número: 22",
                                "Realizando flexión número: 23",
                                "Realizando flexión número: 24",
                                "Realizando flexión número: 25",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "\r\nLos ciclos permiten ejecutar un bloque de código varias veces.\r\n\r\n- `for`: Iteración basada en un contador.\r\n- `while`: Iteración basada en una condición.\r\n- `do...while`: Iteración que se ejecuta al menos una vez."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`for`**: Se usa para repetir un bloque de código un número determinado de veces."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "for (let i = 0; i < 5; i++) {\r\n    console.log(\"Iteración número:\", i);\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Iteración número: 0",
                                "Iteración número: 1",
                                "Iteración número: 2",
                                "Iteración número: 3",
                                "Iteración número: 4",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "<img src=\"https://gist.github.com/gauris26/f6179176bc8a972c7f17eada17029d22/raw/0a3b7455ade818bf05e1e96ec7031bc0f32255f6/image-3image-js.png\" height=\"190px\" />"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- **`while`**: Ejecuta un bloque de código mientras la condición sea verdadera."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let contador = 0;\r\nwhile (contador < 5) {\r\n    console.log(\"Contador:\", contador);\r\n    contador++;\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **`do...while`**: Similar a `while`, pero garantiza que el bloque se ejecute al menos una vez."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let num = 100;\r\ndo {\r\n    console.log(\"Número:\", num);\r\n    num++;\r\n} while (num < 5);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Número: 100",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "### 4. Arrays"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Los arrays permiten almacenar colecciones de datos en una sola variable. Se pueden manipular mediante diferentes métodos."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let frutas = [\"Manzana\", \"Banana\", \"Uva\",];\r\nconsole.log(frutas); // [\"Manzana\", \"Banana\", \"Uva\"]\r\n\r\nfrutas.push(\"Naranja\"); // Agrega un elemento al final\r\n\r\nconsole.log(frutas); // [\"Manzana\", \"Banana\", \"Uva\", \"Naranja\"]"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[ 'Manzana', 'Banana', 'Uva' ]",
                                "[ 'Manzana', 'Banana', 'Uva', 'Naranja' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "Otras operaciones comunes incluyen:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- `pop()`: Elimina el último elemento.\r\n- `shift()`: Elimina el primer elemento.\r\n- `unshift()`: Agrega un elemento al inicio.\r\n- `slice()`: Devuelve una porción del array."
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**Variantes del bulce `for`**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "- `for..in`: Itera sobre las propiedades enumerables de un objeto."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let persona = {nombre: \"Juan\", edad: 30, ciudad: \"Madrid\"};\r\nfor (let clave in persona) {\r\n    console.log(clave, persona[clave]);\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "nombre Juan",
                                "edad 30",
                                "ciudad Madrid",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- `for..of`: Itera sobre elementos de objetos iterables como arrays."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let colores = [\"rojo\", \"verde\", \"azul\"];\r\nfor (let color of colores) {\r\n    console.log(color);\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "rojo",
                                "verde",
                                "azul",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "### 6. Funciones"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Las funciones encapsulan código reutilizable, evitando redundancia y mejorando la legibilidad."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(`Hola, Calor!`);\r\nconsole.log(`Hola, Javier!`);\r\nconsole.log(`Hola, Miguel!`);\r\nconsole.log(`Hola, Raul!`);\r\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Hola, Calor!",
                                "Hola, Javier!",
                                "Hola, Miguel!",
                                "Hola, Raul!",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "let saludar = function(nombre) {\r\n    return `Hola, ${nombre}!`;\r\n}\r\nconsole.log(saludar(\"Carlos\"));\r\nconsole.log(saludar(\"Javier\"));\r\nconsole.log(saludar(\"Miguel\"));\r\nconsole.log(saludar(\"Raul\"));"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Hola, Carlos!",
                                "Hola, Javier!",
                                "Hola, Miguel!",
                                "Hola, Raul!",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "Existen funciones anónimas y de flecha:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const sumar = (a, b) => a + b;\r\nconsole.log(sumar(3, 4)); // 7"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "7",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "### 7. Code Katas"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "**- Invertir una cadena de texto**"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(\"Cadena\".split('').reverse().join(''));"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "anedaC",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "function invertirCadena(str) {\r\n    return str.split('').reverse().join('');\r\n}\r\nconsole.log(invertirCadena(\"reconocer\")); // aloH"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "reconocer",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **Encontrar el número mayor en un array:**"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Existen funciones anónimas y de flecha:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function encontrarMayor(arr) {\r\n    return Math.max(...arr);\r\n}\r\n\r\nconsole.log(encontrarMayor([2, 62, 8, 5, 10])); // 10"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "62",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "- **Verificar si un número es primo:**"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "function esPrimo(num) {\r\n    if (num <= 1) return false;\r\n    for (let i = 2; i < num; i++) {\r\n        if (num % i === 0) return false;\r\n    }\r\n    return true;\r\n}\r\nconsole.log(esPrimo(7)); // true"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "true",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}